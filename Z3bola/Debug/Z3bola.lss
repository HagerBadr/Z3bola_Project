
Z3bola.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000225a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ae  00800060  0000225a  000022ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001548  00000000  00000000  0000237c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c8e  00000000  00000000  000038c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004552  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004692  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004802  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000644b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007336  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000080e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008244  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000084d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008c9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e5       	ldi	r30, 0x5A	; 90
      68:	f2 e2       	ldi	r31, 0x22	; 34
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 30       	cpi	r26, 0x0E	; 14
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 88 0b 	call	0x1710	; 0x1710 <main>
      7a:	0c 94 2b 11 	jmp	0x2256	; 0x2256 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a6 eb       	ldi	r26, 0xB6	; 182
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 10 11 	jmp	0x2220	; 0x2220 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 00 11 	jmp	0x2200	; 0x2200 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 00 11 	jmp	0x2200	; 0x2200 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	86 eb       	ldi	r24, 0xB6	; 182
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 10 11 	jmp	0x2220	; 0x2220 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 00 11 	jmp	0x2200	; 0x2200 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 00 11 	jmp	0x2200	; 0x2200 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 00 11 	jmp	0x2200	; 0x2200 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 04 11 	jmp	0x2208	; 0x2208 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <MDIO_voidSetPinDirection>:
#include"DIO_int.h"
#include"DIO_priv.h"
#include"DIO_config.h"

void MDIO_voidSetPinDirection(u8 Copy_u8PortNumber,u8 Copy_u8PinNumber,u8 Copy_u8Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <MDIO_voidSetPinDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <MDIO_voidSetPinDirection+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	89 83       	std	Y+1, r24	; 0x01
     b46:	6a 83       	std	Y+2, r22	; 0x02
     b48:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortNumber)
     b4a:	89 81       	ldd	r24, Y+1	; 0x01
     b4c:	28 2f       	mov	r18, r24
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	3d 83       	std	Y+5, r19	; 0x05
     b52:	2c 83       	std	Y+4, r18	; 0x04
     b54:	8c 81       	ldd	r24, Y+4	; 0x04
     b56:	9d 81       	ldd	r25, Y+5	; 0x05
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	91 05       	cpc	r25, r1
     b5c:	09 f4       	brne	.+2      	; 0xb60 <MDIO_voidSetPinDirection+0x2a>
     b5e:	47 c0       	rjmp	.+142    	; 0xbee <MDIO_voidSetPinDirection+0xb8>
     b60:	2c 81       	ldd	r18, Y+4	; 0x04
     b62:	3d 81       	ldd	r19, Y+5	; 0x05
     b64:	22 30       	cpi	r18, 0x02	; 2
     b66:	31 05       	cpc	r19, r1
     b68:	2c f4       	brge	.+10     	; 0xb74 <MDIO_voidSetPinDirection+0x3e>
     b6a:	8c 81       	ldd	r24, Y+4	; 0x04
     b6c:	9d 81       	ldd	r25, Y+5	; 0x05
     b6e:	00 97       	sbiw	r24, 0x00	; 0
     b70:	71 f0       	breq	.+28     	; 0xb8e <MDIO_voidSetPinDirection+0x58>
     b72:	cb c0       	rjmp	.+406    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
     b74:	2c 81       	ldd	r18, Y+4	; 0x04
     b76:	3d 81       	ldd	r19, Y+5	; 0x05
     b78:	22 30       	cpi	r18, 0x02	; 2
     b7a:	31 05       	cpc	r19, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <MDIO_voidSetPinDirection+0x4a>
     b7e:	67 c0       	rjmp	.+206    	; 0xc4e <MDIO_voidSetPinDirection+0x118>
     b80:	8c 81       	ldd	r24, Y+4	; 0x04
     b82:	9d 81       	ldd	r25, Y+5	; 0x05
     b84:	83 30       	cpi	r24, 0x03	; 3
     b86:	91 05       	cpc	r25, r1
     b88:	09 f4       	brne	.+2      	; 0xb8c <MDIO_voidSetPinDirection+0x56>
     b8a:	91 c0       	rjmp	.+290    	; 0xcae <MDIO_voidSetPinDirection+0x178>
     b8c:	be c0       	rjmp	.+380    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
	{
	case DIO_PORTA:
		if(Copy_u8Direction == OUTPUT)
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	81 30       	cpi	r24, 0x01	; 1
     b92:	a1 f4       	brne	.+40     	; 0xbbc <MDIO_voidSetPinDirection+0x86>
		{
			SET_BIT(DDRA_REG, Copy_u8PinNumber);
     b94:	aa e3       	ldi	r26, 0x3A	; 58
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	ea e3       	ldi	r30, 0x3A	; 58
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	48 2f       	mov	r20, r24
     ba0:	8a 81       	ldd	r24, Y+2	; 0x02
     ba2:	28 2f       	mov	r18, r24
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	02 2e       	mov	r0, r18
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <MDIO_voidSetPinDirection+0x7c>
     bae:	88 0f       	add	r24, r24
     bb0:	99 1f       	adc	r25, r25
     bb2:	0a 94       	dec	r0
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <MDIO_voidSetPinDirection+0x78>
     bb6:	84 2b       	or	r24, r20
     bb8:	8c 93       	st	X, r24
     bba:	a7 c0       	rjmp	.+334    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8Direction == INPUT)
     bbc:	8b 81       	ldd	r24, Y+3	; 0x03
     bbe:	88 23       	and	r24, r24
     bc0:	09 f0       	breq	.+2      	; 0xbc4 <MDIO_voidSetPinDirection+0x8e>
     bc2:	a3 c0       	rjmp	.+326    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DDRA_REG, Copy_u8PinNumber);
     bc4:	aa e3       	ldi	r26, 0x3A	; 58
     bc6:	b0 e0       	ldi	r27, 0x00	; 0
     bc8:	ea e3       	ldi	r30, 0x3A	; 58
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	80 81       	ld	r24, Z
     bce:	48 2f       	mov	r20, r24
     bd0:	8a 81       	ldd	r24, Y+2	; 0x02
     bd2:	28 2f       	mov	r18, r24
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	02 2e       	mov	r0, r18
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <MDIO_voidSetPinDirection+0xac>
     bde:	88 0f       	add	r24, r24
     be0:	99 1f       	adc	r25, r25
     be2:	0a 94       	dec	r0
     be4:	e2 f7       	brpl	.-8      	; 0xbde <MDIO_voidSetPinDirection+0xa8>
     be6:	80 95       	com	r24
     be8:	84 23       	and	r24, r20
     bea:	8c 93       	st	X, r24
     bec:	8e c0       	rjmp	.+284    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{

		}
		break;
	case DIO_PORTB:
		if(Copy_u8Direction == OUTPUT)
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	81 30       	cpi	r24, 0x01	; 1
     bf2:	a1 f4       	brne	.+40     	; 0xc1c <MDIO_voidSetPinDirection+0xe6>
		{
			SET_BIT(DDRB_REG, Copy_u8PinNumber);
     bf4:	a7 e3       	ldi	r26, 0x37	; 55
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e7 e3       	ldi	r30, 0x37	; 55
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	80 81       	ld	r24, Z
     bfe:	48 2f       	mov	r20, r24
     c00:	8a 81       	ldd	r24, Y+2	; 0x02
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	02 2e       	mov	r0, r18
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <MDIO_voidSetPinDirection+0xdc>
     c0e:	88 0f       	add	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	0a 94       	dec	r0
     c14:	e2 f7       	brpl	.-8      	; 0xc0e <MDIO_voidSetPinDirection+0xd8>
     c16:	84 2b       	or	r24, r20
     c18:	8c 93       	st	X, r24
     c1a:	77 c0       	rjmp	.+238    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8Direction == INPUT)
     c1c:	8b 81       	ldd	r24, Y+3	; 0x03
     c1e:	88 23       	and	r24, r24
     c20:	09 f0       	breq	.+2      	; 0xc24 <MDIO_voidSetPinDirection+0xee>
     c22:	73 c0       	rjmp	.+230    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DDRB_REG, Copy_u8PinNumber);
     c24:	a7 e3       	ldi	r26, 0x37	; 55
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	e7 e3       	ldi	r30, 0x37	; 55
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	48 2f       	mov	r20, r24
     c30:	8a 81       	ldd	r24, Y+2	; 0x02
     c32:	28 2f       	mov	r18, r24
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	02 2e       	mov	r0, r18
     c3c:	02 c0       	rjmp	.+4      	; 0xc42 <MDIO_voidSetPinDirection+0x10c>
     c3e:	88 0f       	add	r24, r24
     c40:	99 1f       	adc	r25, r25
     c42:	0a 94       	dec	r0
     c44:	e2 f7       	brpl	.-8      	; 0xc3e <MDIO_voidSetPinDirection+0x108>
     c46:	80 95       	com	r24
     c48:	84 23       	and	r24, r20
     c4a:	8c 93       	st	X, r24
     c4c:	5e c0       	rjmp	.+188    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{

		}
		break;
	case DIO_PORTC:
		if(Copy_u8Direction == OUTPUT)
     c4e:	8b 81       	ldd	r24, Y+3	; 0x03
     c50:	81 30       	cpi	r24, 0x01	; 1
     c52:	a1 f4       	brne	.+40     	; 0xc7c <MDIO_voidSetPinDirection+0x146>
		{
			SET_BIT(DDRC_REG, Copy_u8PinNumber);
     c54:	a4 e3       	ldi	r26, 0x34	; 52
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	e4 e3       	ldi	r30, 0x34	; 52
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	48 2f       	mov	r20, r24
     c60:	8a 81       	ldd	r24, Y+2	; 0x02
     c62:	28 2f       	mov	r18, r24
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	02 2e       	mov	r0, r18
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <MDIO_voidSetPinDirection+0x13c>
     c6e:	88 0f       	add	r24, r24
     c70:	99 1f       	adc	r25, r25
     c72:	0a 94       	dec	r0
     c74:	e2 f7       	brpl	.-8      	; 0xc6e <MDIO_voidSetPinDirection+0x138>
     c76:	84 2b       	or	r24, r20
     c78:	8c 93       	st	X, r24
     c7a:	47 c0       	rjmp	.+142    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8Direction == INPUT)
     c7c:	8b 81       	ldd	r24, Y+3	; 0x03
     c7e:	88 23       	and	r24, r24
     c80:	09 f0       	breq	.+2      	; 0xc84 <MDIO_voidSetPinDirection+0x14e>
     c82:	43 c0       	rjmp	.+134    	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DDRC_REG, Copy_u8PinNumber);
     c84:	a4 e3       	ldi	r26, 0x34	; 52
     c86:	b0 e0       	ldi	r27, 0x00	; 0
     c88:	e4 e3       	ldi	r30, 0x34	; 52
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	48 2f       	mov	r20, r24
     c90:	8a 81       	ldd	r24, Y+2	; 0x02
     c92:	28 2f       	mov	r18, r24
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	02 2e       	mov	r0, r18
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <MDIO_voidSetPinDirection+0x16c>
     c9e:	88 0f       	add	r24, r24
     ca0:	99 1f       	adc	r25, r25
     ca2:	0a 94       	dec	r0
     ca4:	e2 f7       	brpl	.-8      	; 0xc9e <MDIO_voidSetPinDirection+0x168>
     ca6:	80 95       	com	r24
     ca8:	84 23       	and	r24, r20
     caa:	8c 93       	st	X, r24
     cac:	2e c0       	rjmp	.+92     	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{

		}
		break;
	case DIO_PORTD:
		if(Copy_u8Direction == OUTPUT)
     cae:	8b 81       	ldd	r24, Y+3	; 0x03
     cb0:	81 30       	cpi	r24, 0x01	; 1
     cb2:	a1 f4       	brne	.+40     	; 0xcdc <MDIO_voidSetPinDirection+0x1a6>
		{
			SET_BIT(DDRD_REG, Copy_u8PinNumber);
     cb4:	a1 e3       	ldi	r26, 0x31	; 49
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	e1 e3       	ldi	r30, 0x31	; 49
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	48 2f       	mov	r20, r24
     cc0:	8a 81       	ldd	r24, Y+2	; 0x02
     cc2:	28 2f       	mov	r18, r24
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	02 2e       	mov	r0, r18
     ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <MDIO_voidSetPinDirection+0x19c>
     cce:	88 0f       	add	r24, r24
     cd0:	99 1f       	adc	r25, r25
     cd2:	0a 94       	dec	r0
     cd4:	e2 f7       	brpl	.-8      	; 0xcce <MDIO_voidSetPinDirection+0x198>
     cd6:	84 2b       	or	r24, r20
     cd8:	8c 93       	st	X, r24
     cda:	17 c0       	rjmp	.+46     	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		}
		else if(Copy_u8Direction == INPUT)
     cdc:	8b 81       	ldd	r24, Y+3	; 0x03
     cde:	88 23       	and	r24, r24
     ce0:	a1 f4       	brne	.+40     	; 0xd0a <MDIO_voidSetPinDirection+0x1d4>
		{
			CLR_BIT(DDRD_REG, Copy_u8PinNumber);
     ce2:	a1 e3       	ldi	r26, 0x31	; 49
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e1 e3       	ldi	r30, 0x31	; 49
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	48 2f       	mov	r20, r24
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	02 2e       	mov	r0, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <MDIO_voidSetPinDirection+0x1ca>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	0a 94       	dec	r0
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <MDIO_voidSetPinDirection+0x1c6>
     d04:	80 95       	com	r24
     d06:	84 23       	and	r24, r20
     d08:	8c 93       	st	X, r24
		{

		}
		break;
	}
}
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	cf 91       	pop	r28
     d16:	df 91       	pop	r29
     d18:	08 95       	ret

00000d1a <MDIO_voidSetPinValue>:

void MDIO_voidSetPinValue(u8 Copy_u8PortNumber,u8 Copy_u8PinNumber,u8 Copy_u8state)
{
     d1a:	df 93       	push	r29
     d1c:	cf 93       	push	r28
     d1e:	cd b7       	in	r28, 0x3d	; 61
     d20:	de b7       	in	r29, 0x3e	; 62
     d22:	2d 97       	sbiw	r28, 0x0d	; 13
     d24:	0f b6       	in	r0, 0x3f	; 63
     d26:	f8 94       	cli
     d28:	de bf       	out	0x3e, r29	; 62
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	cd bf       	out	0x3d, r28	; 61
     d2e:	89 83       	std	Y+1, r24	; 0x01
     d30:	6a 83       	std	Y+2, r22	; 0x02
     d32:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8PortNumber)
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	28 2f       	mov	r18, r24
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	3d 87       	std	Y+13, r19	; 0x0d
     d3c:	2c 87       	std	Y+12, r18	; 0x0c
     d3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     d40:	9d 85       	ldd	r25, Y+13	; 0x0d
     d42:	81 30       	cpi	r24, 0x01	; 1
     d44:	91 05       	cpc	r25, r1
     d46:	09 f4       	brne	.+2      	; 0xd4a <MDIO_voidSetPinValue+0x30>
     d48:	4f c0       	rjmp	.+158    	; 0xde8 <MDIO_voidSetPinValue+0xce>
     d4a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d4c:	3d 85       	ldd	r19, Y+13	; 0x0d
     d4e:	22 30       	cpi	r18, 0x02	; 2
     d50:	31 05       	cpc	r19, r1
     d52:	2c f4       	brge	.+10     	; 0xd5e <MDIO_voidSetPinValue+0x44>
     d54:	8c 85       	ldd	r24, Y+12	; 0x0c
     d56:	9d 85       	ldd	r25, Y+13	; 0x0d
     d58:	00 97       	sbiw	r24, 0x00	; 0
     d5a:	71 f0       	breq	.+28     	; 0xd78 <MDIO_voidSetPinValue+0x5e>
     d5c:	eb c0       	rjmp	.+470    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
     d5e:	2c 85       	ldd	r18, Y+12	; 0x0c
     d60:	3d 85       	ldd	r19, Y+13	; 0x0d
     d62:	22 30       	cpi	r18, 0x02	; 2
     d64:	31 05       	cpc	r19, r1
     d66:	09 f4       	brne	.+2      	; 0xd6a <MDIO_voidSetPinValue+0x50>
     d68:	77 c0       	rjmp	.+238    	; 0xe58 <MDIO_voidSetPinValue+0x13e>
     d6a:	8c 85       	ldd	r24, Y+12	; 0x0c
     d6c:	9d 85       	ldd	r25, Y+13	; 0x0d
     d6e:	83 30       	cpi	r24, 0x03	; 3
     d70:	91 05       	cpc	r25, r1
     d72:	09 f4       	brne	.+2      	; 0xd76 <MDIO_voidSetPinValue+0x5c>
     d74:	a9 c0       	rjmp	.+338    	; 0xec8 <MDIO_voidSetPinValue+0x1ae>
     d76:	de c0       	rjmp	.+444    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
		{
		case DIO_PORTA:
			switch(Copy_u8state)
     d78:	8b 81       	ldd	r24, Y+3	; 0x03
     d7a:	28 2f       	mov	r18, r24
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	3b 87       	std	Y+11, r19	; 0x0b
     d80:	2a 87       	std	Y+10, r18	; 0x0a
     d82:	8a 85       	ldd	r24, Y+10	; 0x0a
     d84:	9b 85       	ldd	r25, Y+11	; 0x0b
     d86:	00 97       	sbiw	r24, 0x00	; 0
     d88:	d1 f0       	breq	.+52     	; 0xdbe <MDIO_voidSetPinValue+0xa4>
     d8a:	2a 85       	ldd	r18, Y+10	; 0x0a
     d8c:	3b 85       	ldd	r19, Y+11	; 0x0b
     d8e:	21 30       	cpi	r18, 0x01	; 1
     d90:	31 05       	cpc	r19, r1
     d92:	09 f0       	breq	.+2      	; 0xd96 <MDIO_voidSetPinValue+0x7c>
     d94:	cf c0       	rjmp	.+414    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
			{
			case HIGH:
				SET_BIT(PORTA_REG,Copy_u8PinNumber);
     d96:	ab e3       	ldi	r26, 0x3B	; 59
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	eb e3       	ldi	r30, 0x3B	; 59
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	48 2f       	mov	r20, r24
     da2:	8a 81       	ldd	r24, Y+2	; 0x02
     da4:	28 2f       	mov	r18, r24
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	02 2e       	mov	r0, r18
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <MDIO_voidSetPinValue+0x9a>
     db0:	88 0f       	add	r24, r24
     db2:	99 1f       	adc	r25, r25
     db4:	0a 94       	dec	r0
     db6:	e2 f7       	brpl	.-8      	; 0xdb0 <MDIO_voidSetPinValue+0x96>
     db8:	84 2b       	or	r24, r20
     dba:	8c 93       	st	X, r24
     dbc:	bb c0       	rjmp	.+374    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			case LOW:
				CLR_BIT(PORTA_REG,Copy_u8PinNumber);
     dbe:	ab e3       	ldi	r26, 0x3B	; 59
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	eb e3       	ldi	r30, 0x3B	; 59
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	48 2f       	mov	r20, r24
     dca:	8a 81       	ldd	r24, Y+2	; 0x02
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 2e       	mov	r0, r18
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <MDIO_voidSetPinValue+0xc2>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <MDIO_voidSetPinValue+0xbe>
     de0:	80 95       	com	r24
     de2:	84 23       	and	r24, r20
     de4:	8c 93       	st	X, r24
     de6:	a6 c0       	rjmp	.+332    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			}
			break;
		case DIO_PORTB:
			switch(Copy_u8state)
     de8:	8b 81       	ldd	r24, Y+3	; 0x03
     dea:	28 2f       	mov	r18, r24
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	39 87       	std	Y+9, r19	; 0x09
     df0:	28 87       	std	Y+8, r18	; 0x08
     df2:	88 85       	ldd	r24, Y+8	; 0x08
     df4:	99 85       	ldd	r25, Y+9	; 0x09
     df6:	00 97       	sbiw	r24, 0x00	; 0
     df8:	d1 f0       	breq	.+52     	; 0xe2e <MDIO_voidSetPinValue+0x114>
     dfa:	28 85       	ldd	r18, Y+8	; 0x08
     dfc:	39 85       	ldd	r19, Y+9	; 0x09
     dfe:	21 30       	cpi	r18, 0x01	; 1
     e00:	31 05       	cpc	r19, r1
     e02:	09 f0       	breq	.+2      	; 0xe06 <MDIO_voidSetPinValue+0xec>
     e04:	97 c0       	rjmp	.+302    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
			{
			case HIGH:
				SET_BIT(PORTB_REG,Copy_u8PinNumber);
     e06:	a8 e3       	ldi	r26, 0x38	; 56
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	e8 e3       	ldi	r30, 0x38	; 56
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	48 2f       	mov	r20, r24
     e12:	8a 81       	ldd	r24, Y+2	; 0x02
     e14:	28 2f       	mov	r18, r24
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	02 2e       	mov	r0, r18
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <MDIO_voidSetPinValue+0x10a>
     e20:	88 0f       	add	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	0a 94       	dec	r0
     e26:	e2 f7       	brpl	.-8      	; 0xe20 <MDIO_voidSetPinValue+0x106>
     e28:	84 2b       	or	r24, r20
     e2a:	8c 93       	st	X, r24
     e2c:	83 c0       	rjmp	.+262    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			case LOW:
				CLR_BIT(PORTB_REG,Copy_u8PinNumber);
     e2e:	a8 e3       	ldi	r26, 0x38	; 56
     e30:	b0 e0       	ldi	r27, 0x00	; 0
     e32:	e8 e3       	ldi	r30, 0x38	; 56
     e34:	f0 e0       	ldi	r31, 0x00	; 0
     e36:	80 81       	ld	r24, Z
     e38:	48 2f       	mov	r20, r24
     e3a:	8a 81       	ldd	r24, Y+2	; 0x02
     e3c:	28 2f       	mov	r18, r24
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	02 2e       	mov	r0, r18
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <MDIO_voidSetPinValue+0x132>
     e48:	88 0f       	add	r24, r24
     e4a:	99 1f       	adc	r25, r25
     e4c:	0a 94       	dec	r0
     e4e:	e2 f7       	brpl	.-8      	; 0xe48 <MDIO_voidSetPinValue+0x12e>
     e50:	80 95       	com	r24
     e52:	84 23       	and	r24, r20
     e54:	8c 93       	st	X, r24
     e56:	6e c0       	rjmp	.+220    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			}
				break;
		case DIO_PORTC:
			switch(Copy_u8state)
     e58:	8b 81       	ldd	r24, Y+3	; 0x03
     e5a:	28 2f       	mov	r18, r24
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	3f 83       	std	Y+7, r19	; 0x07
     e60:	2e 83       	std	Y+6, r18	; 0x06
     e62:	8e 81       	ldd	r24, Y+6	; 0x06
     e64:	9f 81       	ldd	r25, Y+7	; 0x07
     e66:	00 97       	sbiw	r24, 0x00	; 0
     e68:	d1 f0       	breq	.+52     	; 0xe9e <MDIO_voidSetPinValue+0x184>
     e6a:	2e 81       	ldd	r18, Y+6	; 0x06
     e6c:	3f 81       	ldd	r19, Y+7	; 0x07
     e6e:	21 30       	cpi	r18, 0x01	; 1
     e70:	31 05       	cpc	r19, r1
     e72:	09 f0       	breq	.+2      	; 0xe76 <MDIO_voidSetPinValue+0x15c>
     e74:	5f c0       	rjmp	.+190    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
			{
			case HIGH:
				SET_BIT(PORTC_REG,Copy_u8PinNumber);
     e76:	a5 e3       	ldi	r26, 0x35	; 53
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	e5 e3       	ldi	r30, 0x35	; 53
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	80 81       	ld	r24, Z
     e80:	48 2f       	mov	r20, r24
     e82:	8a 81       	ldd	r24, Y+2	; 0x02
     e84:	28 2f       	mov	r18, r24
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	02 2e       	mov	r0, r18
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <MDIO_voidSetPinValue+0x17a>
     e90:	88 0f       	add	r24, r24
     e92:	99 1f       	adc	r25, r25
     e94:	0a 94       	dec	r0
     e96:	e2 f7       	brpl	.-8      	; 0xe90 <MDIO_voidSetPinValue+0x176>
     e98:	84 2b       	or	r24, r20
     e9a:	8c 93       	st	X, r24
     e9c:	4b c0       	rjmp	.+150    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			case LOW:
				CLR_BIT(PORTC_REG,Copy_u8PinNumber);
     e9e:	a5 e3       	ldi	r26, 0x35	; 53
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	e5 e3       	ldi	r30, 0x35	; 53
     ea4:	f0 e0       	ldi	r31, 0x00	; 0
     ea6:	80 81       	ld	r24, Z
     ea8:	48 2f       	mov	r20, r24
     eaa:	8a 81       	ldd	r24, Y+2	; 0x02
     eac:	28 2f       	mov	r18, r24
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	02 2e       	mov	r0, r18
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <MDIO_voidSetPinValue+0x1a2>
     eb8:	88 0f       	add	r24, r24
     eba:	99 1f       	adc	r25, r25
     ebc:	0a 94       	dec	r0
     ebe:	e2 f7       	brpl	.-8      	; 0xeb8 <MDIO_voidSetPinValue+0x19e>
     ec0:	80 95       	com	r24
     ec2:	84 23       	and	r24, r20
     ec4:	8c 93       	st	X, r24
     ec6:	36 c0       	rjmp	.+108    	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			}
				break;
		case DIO_PORTD:
			switch(Copy_u8state)
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
     eca:	28 2f       	mov	r18, r24
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	3d 83       	std	Y+5, r19	; 0x05
     ed0:	2c 83       	std	Y+4, r18	; 0x04
     ed2:	8c 81       	ldd	r24, Y+4	; 0x04
     ed4:	9d 81       	ldd	r25, Y+5	; 0x05
     ed6:	00 97       	sbiw	r24, 0x00	; 0
     ed8:	c9 f0       	breq	.+50     	; 0xf0c <MDIO_voidSetPinValue+0x1f2>
     eda:	2c 81       	ldd	r18, Y+4	; 0x04
     edc:	3d 81       	ldd	r19, Y+5	; 0x05
     ede:	21 30       	cpi	r18, 0x01	; 1
     ee0:	31 05       	cpc	r19, r1
     ee2:	41 f5       	brne	.+80     	; 0xf34 <MDIO_voidSetPinValue+0x21a>
			{
			case HIGH:
				SET_BIT(PORTD_REG,Copy_u8PinNumber);
     ee4:	a2 e3       	ldi	r26, 0x32	; 50
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e2 e3       	ldi	r30, 0x32	; 50
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	48 2f       	mov	r20, r24
     ef0:	8a 81       	ldd	r24, Y+2	; 0x02
     ef2:	28 2f       	mov	r18, r24
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 2e       	mov	r0, r18
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <MDIO_voidSetPinValue+0x1e8>
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	0a 94       	dec	r0
     f04:	e2 f7       	brpl	.-8      	; 0xefe <MDIO_voidSetPinValue+0x1e4>
     f06:	84 2b       	or	r24, r20
     f08:	8c 93       	st	X, r24
     f0a:	14 c0       	rjmp	.+40     	; 0xf34 <MDIO_voidSetPinValue+0x21a>
				break;
			case LOW:
				CLR_BIT(PORTD_REG,Copy_u8PinNumber);
     f0c:	a2 e3       	ldi	r26, 0x32	; 50
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	e2 e3       	ldi	r30, 0x32	; 50
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	80 81       	ld	r24, Z
     f16:	48 2f       	mov	r20, r24
     f18:	8a 81       	ldd	r24, Y+2	; 0x02
     f1a:	28 2f       	mov	r18, r24
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	02 2e       	mov	r0, r18
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <MDIO_voidSetPinValue+0x210>
     f26:	88 0f       	add	r24, r24
     f28:	99 1f       	adc	r25, r25
     f2a:	0a 94       	dec	r0
     f2c:	e2 f7       	brpl	.-8      	; 0xf26 <MDIO_voidSetPinValue+0x20c>
     f2e:	80 95       	com	r24
     f30:	84 23       	and	r24, r20
     f32:	8c 93       	st	X, r24
				break;
			}
				break;
		}
}
     f34:	2d 96       	adiw	r28, 0x0d	; 13
     f36:	0f b6       	in	r0, 0x3f	; 63
     f38:	f8 94       	cli
     f3a:	de bf       	out	0x3e, r29	; 62
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	cd bf       	out	0x3d, r28	; 61
     f40:	cf 91       	pop	r28
     f42:	df 91       	pop	r29
     f44:	08 95       	ret

00000f46 <MDIO_void_getPinValue>:

u8 MDIO_void_getPinValue(u8 Copy_u8PortNumber,u8 Copy_u8PinNumber)
{
     f46:	df 93       	push	r29
     f48:	cf 93       	push	r28
     f4a:	00 d0       	rcall	.+0      	; 0xf4c <MDIO_void_getPinValue+0x6>
     f4c:	00 d0       	rcall	.+0      	; 0xf4e <MDIO_void_getPinValue+0x8>
     f4e:	0f 92       	push	r0
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	8a 83       	std	Y+2, r24	; 0x02
     f56:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8PinValue;

	switch(Copy_u8PortNumber)
     f58:	8a 81       	ldd	r24, Y+2	; 0x02
     f5a:	28 2f       	mov	r18, r24
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	3d 83       	std	Y+5, r19	; 0x05
     f60:	2c 83       	std	Y+4, r18	; 0x04
     f62:	4c 81       	ldd	r20, Y+4	; 0x04
     f64:	5d 81       	ldd	r21, Y+5	; 0x05
     f66:	41 30       	cpi	r20, 0x01	; 1
     f68:	51 05       	cpc	r21, r1
     f6a:	41 f1       	breq	.+80     	; 0xfbc <MDIO_void_getPinValue+0x76>
     f6c:	8c 81       	ldd	r24, Y+4	; 0x04
     f6e:	9d 81       	ldd	r25, Y+5	; 0x05
     f70:	82 30       	cpi	r24, 0x02	; 2
     f72:	91 05       	cpc	r25, r1
     f74:	34 f4       	brge	.+12     	; 0xf82 <MDIO_void_getPinValue+0x3c>
     f76:	2c 81       	ldd	r18, Y+4	; 0x04
     f78:	3d 81       	ldd	r19, Y+5	; 0x05
     f7a:	21 15       	cp	r18, r1
     f7c:	31 05       	cpc	r19, r1
     f7e:	61 f0       	breq	.+24     	; 0xf98 <MDIO_void_getPinValue+0x52>
     f80:	52 c0       	rjmp	.+164    	; 0x1026 <MDIO_void_getPinValue+0xe0>
     f82:	4c 81       	ldd	r20, Y+4	; 0x04
     f84:	5d 81       	ldd	r21, Y+5	; 0x05
     f86:	42 30       	cpi	r20, 0x02	; 2
     f88:	51 05       	cpc	r21, r1
     f8a:	51 f1       	breq	.+84     	; 0xfe0 <MDIO_void_getPinValue+0x9a>
     f8c:	8c 81       	ldd	r24, Y+4	; 0x04
     f8e:	9d 81       	ldd	r25, Y+5	; 0x05
     f90:	83 30       	cpi	r24, 0x03	; 3
     f92:	91 05       	cpc	r25, r1
     f94:	b9 f1       	breq	.+110    	; 0x1004 <MDIO_void_getPinValue+0xbe>
     f96:	47 c0       	rjmp	.+142    	; 0x1026 <MDIO_void_getPinValue+0xe0>
		{
		case DIO_PORTA:
			Local_u8PinValue = GET_BIT(PINA_REG,Copy_u8PinNumber);
     f98:	e9 e3       	ldi	r30, 0x39	; 57
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	80 81       	ld	r24, Z
     f9e:	28 2f       	mov	r18, r24
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	88 2f       	mov	r24, r24
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	a9 01       	movw	r20, r18
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <MDIO_void_getPinValue+0x6a>
     fac:	55 95       	asr	r21
     fae:	47 95       	ror	r20
     fb0:	8a 95       	dec	r24
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <MDIO_void_getPinValue+0x66>
     fb4:	ca 01       	movw	r24, r20
     fb6:	81 70       	andi	r24, 0x01	; 1
     fb8:	89 83       	std	Y+1, r24	; 0x01
     fba:	35 c0       	rjmp	.+106    	; 0x1026 <MDIO_void_getPinValue+0xe0>
			break;
		case DIO_PORTB:
			Local_u8PinValue = GET_BIT(PINB_REG,Copy_u8PinNumber);
     fbc:	e6 e3       	ldi	r30, 0x36	; 54
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	80 81       	ld	r24, Z
     fc2:	28 2f       	mov	r18, r24
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	88 2f       	mov	r24, r24
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	a9 01       	movw	r20, r18
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <MDIO_void_getPinValue+0x8e>
     fd0:	55 95       	asr	r21
     fd2:	47 95       	ror	r20
     fd4:	8a 95       	dec	r24
     fd6:	e2 f7       	brpl	.-8      	; 0xfd0 <MDIO_void_getPinValue+0x8a>
     fd8:	ca 01       	movw	r24, r20
     fda:	81 70       	andi	r24, 0x01	; 1
     fdc:	89 83       	std	Y+1, r24	; 0x01
     fde:	23 c0       	rjmp	.+70     	; 0x1026 <MDIO_void_getPinValue+0xe0>
				break;
		case DIO_PORTC:
			Local_u8PinValue = GET_BIT(PINC_REG,Copy_u8PinNumber);
     fe0:	e3 e3       	ldi	r30, 0x33	; 51
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	80 81       	ld	r24, Z
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	8b 81       	ldd	r24, Y+3	; 0x03
     fec:	88 2f       	mov	r24, r24
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	a9 01       	movw	r20, r18
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <MDIO_void_getPinValue+0xb2>
     ff4:	55 95       	asr	r21
     ff6:	47 95       	ror	r20
     ff8:	8a 95       	dec	r24
     ffa:	e2 f7       	brpl	.-8      	; 0xff4 <MDIO_void_getPinValue+0xae>
     ffc:	ca 01       	movw	r24, r20
     ffe:	81 70       	andi	r24, 0x01	; 1
    1000:	89 83       	std	Y+1, r24	; 0x01
    1002:	11 c0       	rjmp	.+34     	; 0x1026 <MDIO_void_getPinValue+0xe0>
				break;
		case DIO_PORTD:
			Local_u8PinValue = GET_BIT(PIND_REG,Copy_u8PinNumber);
    1004:	e0 e3       	ldi	r30, 0x30	; 48
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	28 2f       	mov	r18, r24
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	8b 81       	ldd	r24, Y+3	; 0x03
    1010:	88 2f       	mov	r24, r24
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	a9 01       	movw	r20, r18
    1016:	02 c0       	rjmp	.+4      	; 0x101c <MDIO_void_getPinValue+0xd6>
    1018:	55 95       	asr	r21
    101a:	47 95       	ror	r20
    101c:	8a 95       	dec	r24
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <MDIO_void_getPinValue+0xd2>
    1020:	ca 01       	movw	r24, r20
    1022:	81 70       	andi	r24, 0x01	; 1
    1024:	89 83       	std	Y+1, r24	; 0x01
				break;
		}
	return Local_u8PinValue;
    1026:	89 81       	ldd	r24, Y+1	; 0x01
}
    1028:	0f 90       	pop	r0
    102a:	0f 90       	pop	r0
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	0f 90       	pop	r0
    1032:	cf 91       	pop	r28
    1034:	df 91       	pop	r29
    1036:	08 95       	ret

00001038 <MDIO_voidSetPortSpecificDirection>:

void MDIO_voidSetPortSpecificDirection(u8 Copy_u8PortNumber,u8 Copy_u8SpecificDirection)
{
    1038:	df 93       	push	r29
    103a:	cf 93       	push	r28
    103c:	00 d0       	rcall	.+0      	; 0x103e <MDIO_voidSetPortSpecificDirection+0x6>
    103e:	00 d0       	rcall	.+0      	; 0x1040 <MDIO_voidSetPortSpecificDirection+0x8>
    1040:	cd b7       	in	r28, 0x3d	; 61
    1042:	de b7       	in	r29, 0x3e	; 62
    1044:	89 83       	std	Y+1, r24	; 0x01
    1046:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNumber)
    1048:	89 81       	ldd	r24, Y+1	; 0x01
    104a:	28 2f       	mov	r18, r24
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	3c 83       	std	Y+4, r19	; 0x04
    1050:	2b 83       	std	Y+3, r18	; 0x03
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	9c 81       	ldd	r25, Y+4	; 0x04
    1056:	81 30       	cpi	r24, 0x01	; 1
    1058:	91 05       	cpc	r25, r1
    105a:	d1 f0       	breq	.+52     	; 0x1090 <MDIO_voidSetPortSpecificDirection+0x58>
    105c:	2b 81       	ldd	r18, Y+3	; 0x03
    105e:	3c 81       	ldd	r19, Y+4	; 0x04
    1060:	22 30       	cpi	r18, 0x02	; 2
    1062:	31 05       	cpc	r19, r1
    1064:	2c f4       	brge	.+10     	; 0x1070 <MDIO_voidSetPortSpecificDirection+0x38>
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	9c 81       	ldd	r25, Y+4	; 0x04
    106a:	00 97       	sbiw	r24, 0x00	; 0
    106c:	61 f0       	breq	.+24     	; 0x1086 <MDIO_voidSetPortSpecificDirection+0x4e>
    106e:	1e c0       	rjmp	.+60     	; 0x10ac <MDIO_voidSetPortSpecificDirection+0x74>
    1070:	2b 81       	ldd	r18, Y+3	; 0x03
    1072:	3c 81       	ldd	r19, Y+4	; 0x04
    1074:	22 30       	cpi	r18, 0x02	; 2
    1076:	31 05       	cpc	r19, r1
    1078:	81 f0       	breq	.+32     	; 0x109a <MDIO_voidSetPortSpecificDirection+0x62>
    107a:	8b 81       	ldd	r24, Y+3	; 0x03
    107c:	9c 81       	ldd	r25, Y+4	; 0x04
    107e:	83 30       	cpi	r24, 0x03	; 3
    1080:	91 05       	cpc	r25, r1
    1082:	81 f0       	breq	.+32     	; 0x10a4 <MDIO_voidSetPortSpecificDirection+0x6c>
    1084:	13 c0       	rjmp	.+38     	; 0x10ac <MDIO_voidSetPortSpecificDirection+0x74>
	{
	case DIO_PORTA:
		//DDRA_REG == Copy_u8SpecificDirection;
		SET_REG(DDRA_REG,Copy_u8SpecificDirection);
    1086:	ea e3       	ldi	r30, 0x3A	; 58
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	80 83       	st	Z, r24
    108e:	0e c0       	rjmp	.+28     	; 0x10ac <MDIO_voidSetPortSpecificDirection+0x74>
		break;
	case DIO_PORTB:
		SET_REG(DDRB_REG,Copy_u8SpecificDirection);
    1090:	e7 e3       	ldi	r30, 0x37	; 55
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	80 83       	st	Z, r24
    1098:	09 c0       	rjmp	.+18     	; 0x10ac <MDIO_voidSetPortSpecificDirection+0x74>
		break;
	case DIO_PORTC:
		SET_REG(DDRC_REG,Copy_u8SpecificDirection);
    109a:	e4 e3       	ldi	r30, 0x34	; 52
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	8a 81       	ldd	r24, Y+2	; 0x02
    10a0:	80 83       	st	Z, r24
    10a2:	04 c0       	rjmp	.+8      	; 0x10ac <MDIO_voidSetPortSpecificDirection+0x74>
		break;
	case DIO_PORTD:
		SET_REG(DDRD_REG,Copy_u8SpecificDirection);
    10a4:	e1 e3       	ldi	r30, 0x31	; 49
    10a6:	f0 e0       	ldi	r31, 0x00	; 0
    10a8:	8a 81       	ldd	r24, Y+2	; 0x02
    10aa:	80 83       	st	Z, r24
		break;
	default :
		break;
	}
}
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
    10b4:	cf 91       	pop	r28
    10b6:	df 91       	pop	r29
    10b8:	08 95       	ret

000010ba <MDIO_voidSetPortSpecificValue>:
void MDIO_voidSetPortSpecificValue(u8 Copy_u8PortNumber,u8 Copy_u8state)
{
    10ba:	df 93       	push	r29
    10bc:	cf 93       	push	r28
    10be:	00 d0       	rcall	.+0      	; 0x10c0 <MDIO_voidSetPortSpecificValue+0x6>
    10c0:	00 d0       	rcall	.+0      	; 0x10c2 <MDIO_voidSetPortSpecificValue+0x8>
    10c2:	cd b7       	in	r28, 0x3d	; 61
    10c4:	de b7       	in	r29, 0x3e	; 62
    10c6:	89 83       	std	Y+1, r24	; 0x01
    10c8:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNumber)
    10ca:	89 81       	ldd	r24, Y+1	; 0x01
    10cc:	28 2f       	mov	r18, r24
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	3c 83       	std	Y+4, r19	; 0x04
    10d2:	2b 83       	std	Y+3, r18	; 0x03
    10d4:	8b 81       	ldd	r24, Y+3	; 0x03
    10d6:	9c 81       	ldd	r25, Y+4	; 0x04
    10d8:	81 30       	cpi	r24, 0x01	; 1
    10da:	91 05       	cpc	r25, r1
    10dc:	d1 f0       	breq	.+52     	; 0x1112 <MDIO_voidSetPortSpecificValue+0x58>
    10de:	2b 81       	ldd	r18, Y+3	; 0x03
    10e0:	3c 81       	ldd	r19, Y+4	; 0x04
    10e2:	22 30       	cpi	r18, 0x02	; 2
    10e4:	31 05       	cpc	r19, r1
    10e6:	2c f4       	brge	.+10     	; 0x10f2 <MDIO_voidSetPortSpecificValue+0x38>
    10e8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ea:	9c 81       	ldd	r25, Y+4	; 0x04
    10ec:	00 97       	sbiw	r24, 0x00	; 0
    10ee:	61 f0       	breq	.+24     	; 0x1108 <MDIO_voidSetPortSpecificValue+0x4e>
    10f0:	1e c0       	rjmp	.+60     	; 0x112e <MDIO_voidSetPortSpecificValue+0x74>
    10f2:	2b 81       	ldd	r18, Y+3	; 0x03
    10f4:	3c 81       	ldd	r19, Y+4	; 0x04
    10f6:	22 30       	cpi	r18, 0x02	; 2
    10f8:	31 05       	cpc	r19, r1
    10fa:	81 f0       	breq	.+32     	; 0x111c <MDIO_voidSetPortSpecificValue+0x62>
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1100:	83 30       	cpi	r24, 0x03	; 3
    1102:	91 05       	cpc	r25, r1
    1104:	81 f0       	breq	.+32     	; 0x1126 <MDIO_voidSetPortSpecificValue+0x6c>
    1106:	13 c0       	rjmp	.+38     	; 0x112e <MDIO_voidSetPortSpecificValue+0x74>
	{
	case DIO_PORTA:
		SET_REG(PORTA_REG,Copy_u8state);
    1108:	eb e3       	ldi	r30, 0x3B	; 59
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	8a 81       	ldd	r24, Y+2	; 0x02
    110e:	80 83       	st	Z, r24
    1110:	0e c0       	rjmp	.+28     	; 0x112e <MDIO_voidSetPortSpecificValue+0x74>
		break;
	case DIO_PORTB:
		SET_REG(PORTB_REG,Copy_u8state);
    1112:	e8 e3       	ldi	r30, 0x38	; 56
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	80 83       	st	Z, r24
    111a:	09 c0       	rjmp	.+18     	; 0x112e <MDIO_voidSetPortSpecificValue+0x74>
		break;
	case DIO_PORTC:
		SET_REG(PORTC_REG,Copy_u8state);
    111c:	e5 e3       	ldi	r30, 0x35	; 53
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	8a 81       	ldd	r24, Y+2	; 0x02
    1122:	80 83       	st	Z, r24
    1124:	04 c0       	rjmp	.+8      	; 0x112e <MDIO_voidSetPortSpecificValue+0x74>
		break;
	case DIO_PORTD:
		SET_REG(PORTD_REG,Copy_u8state);
    1126:	e2 e3       	ldi	r30, 0x32	; 50
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	8a 81       	ldd	r24, Y+2	; 0x02
    112c:	80 83       	st	Z, r24
		break;
	}
}
    112e:	0f 90       	pop	r0
    1130:	0f 90       	pop	r0
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	cf 91       	pop	r28
    1138:	df 91       	pop	r29
    113a:	08 95       	ret

0000113c <LCD_voidInit>:
#include"LCD_priv.h"
#include"LCD_config.h"


void LCD_voidInit(void)
{
    113c:	df 93       	push	r29
    113e:	cf 93       	push	r28
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	2e 97       	sbiw	r28, 0x0e	; 14
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61
#if LCD_INIT_MODE == EIGHT_BIT_MODE
	/**intialize data port**/
	MDIO_voidSetPortSpecificDirection(LCD_DATA_PORT,LCD_ALL_OUTPUT);
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	6f ef       	ldi	r22, 0xFF	; 255
    1154:	0e 94 1c 08 	call	0x1038	; 0x1038 <MDIO_voidSetPortSpecificDirection>
	MDIO_voidSetPinDirection(LCD_CTRL_PORT , LCD_RS_PIN,OUTPUT);
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	61 e0       	ldi	r22, 0x01	; 1
    115c:	41 e0       	ldi	r20, 0x01	; 1
    115e:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_CTRL_PORT , LCD_EN_PIN,OUTPUT);
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	62 e0       	ldi	r22, 0x02	; 2
    1166:	41 e0       	ldi	r20, 0x01	; 1
    1168:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(LCD_CTRL_PORT , LCD_RW_PIN,OUTPUT);
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	41 e0       	ldi	r20, 0x01	; 1
    1172:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinDirection>
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	a0 e2       	ldi	r26, 0x20	; 32
    117c:	b2 e4       	ldi	r27, 0x42	; 66
    117e:	8b 87       	std	Y+11, r24	; 0x0b
    1180:	9c 87       	std	Y+12, r25	; 0x0c
    1182:	ad 87       	std	Y+13, r26	; 0x0d
    1184:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1186:	6b 85       	ldd	r22, Y+11	; 0x0b
    1188:	7c 85       	ldd	r23, Y+12	; 0x0c
    118a:	8d 85       	ldd	r24, Y+13	; 0x0d
    118c:	9e 85       	ldd	r25, Y+14	; 0x0e
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	4a ef       	ldi	r20, 0xFA	; 250
    1194:	54 e4       	ldi	r21, 0x44	; 68
    1196:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    119a:	dc 01       	movw	r26, r24
    119c:	cb 01       	movw	r24, r22
    119e:	8f 83       	std	Y+7, r24	; 0x07
    11a0:	98 87       	std	Y+8, r25	; 0x08
    11a2:	a9 87       	std	Y+9, r26	; 0x09
    11a4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11a6:	6f 81       	ldd	r22, Y+7	; 0x07
    11a8:	78 85       	ldd	r23, Y+8	; 0x08
    11aa:	89 85       	ldd	r24, Y+9	; 0x09
    11ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	40 e8       	ldi	r20, 0x80	; 128
    11b4:	5f e3       	ldi	r21, 0x3F	; 63
    11b6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11ba:	88 23       	and	r24, r24
    11bc:	2c f4       	brge	.+10     	; 0x11c8 <LCD_voidInit+0x8c>
		__ticks = 1;
    11be:	81 e0       	ldi	r24, 0x01	; 1
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	9e 83       	std	Y+6, r25	; 0x06
    11c4:	8d 83       	std	Y+5, r24	; 0x05
    11c6:	3f c0       	rjmp	.+126    	; 0x1246 <LCD_voidInit+0x10a>
	else if (__tmp > 65535)
    11c8:	6f 81       	ldd	r22, Y+7	; 0x07
    11ca:	78 85       	ldd	r23, Y+8	; 0x08
    11cc:	89 85       	ldd	r24, Y+9	; 0x09
    11ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	3f ef       	ldi	r19, 0xFF	; 255
    11d4:	4f e7       	ldi	r20, 0x7F	; 127
    11d6:	57 e4       	ldi	r21, 0x47	; 71
    11d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11dc:	18 16       	cp	r1, r24
    11de:	4c f5       	brge	.+82     	; 0x1232 <LCD_voidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    11e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    11e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    11e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	40 e2       	ldi	r20, 0x20	; 32
    11ee:	51 e4       	ldi	r21, 0x41	; 65
    11f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11f4:	dc 01       	movw	r26, r24
    11f6:	cb 01       	movw	r24, r22
    11f8:	bc 01       	movw	r22, r24
    11fa:	cd 01       	movw	r24, r26
    11fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	9e 83       	std	Y+6, r25	; 0x06
    1206:	8d 83       	std	Y+5, r24	; 0x05
    1208:	0f c0       	rjmp	.+30     	; 0x1228 <LCD_voidInit+0xec>
    120a:	88 ec       	ldi	r24, 0xC8	; 200
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	9c 83       	std	Y+4, r25	; 0x04
    1210:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	9c 81       	ldd	r25, Y+4	; 0x04
    1216:	01 97       	sbiw	r24, 0x01	; 1
    1218:	f1 f7       	brne	.-4      	; 0x1216 <LCD_voidInit+0xda>
    121a:	9c 83       	std	Y+4, r25	; 0x04
    121c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    121e:	8d 81       	ldd	r24, Y+5	; 0x05
    1220:	9e 81       	ldd	r25, Y+6	; 0x06
    1222:	01 97       	sbiw	r24, 0x01	; 1
    1224:	9e 83       	std	Y+6, r25	; 0x06
    1226:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1228:	8d 81       	ldd	r24, Y+5	; 0x05
    122a:	9e 81       	ldd	r25, Y+6	; 0x06
    122c:	00 97       	sbiw	r24, 0x00	; 0
    122e:	69 f7       	brne	.-38     	; 0x120a <LCD_voidInit+0xce>
    1230:	14 c0       	rjmp	.+40     	; 0x125a <LCD_voidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1232:	6f 81       	ldd	r22, Y+7	; 0x07
    1234:	78 85       	ldd	r23, Y+8	; 0x08
    1236:	89 85       	ldd	r24, Y+9	; 0x09
    1238:	9a 85       	ldd	r25, Y+10	; 0x0a
    123a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    123e:	dc 01       	movw	r26, r24
    1240:	cb 01       	movw	r24, r22
    1242:	9e 83       	std	Y+6, r25	; 0x06
    1244:	8d 83       	std	Y+5, r24	; 0x05
    1246:	8d 81       	ldd	r24, Y+5	; 0x05
    1248:	9e 81       	ldd	r25, Y+6	; 0x06
    124a:	9a 83       	std	Y+2, r25	; 0x02
    124c:	89 83       	std	Y+1, r24	; 0x01
    124e:	89 81       	ldd	r24, Y+1	; 0x01
    1250:	9a 81       	ldd	r25, Y+2	; 0x02
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <LCD_voidInit+0x116>
    1256:	9a 83       	std	Y+2, r25	; 0x02
    1258:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
	LCD_voidSendCommand(FUNCTION_SET_CMD);
    125a:	8b e3       	ldi	r24, 0x3B	; 59
    125c:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
	LCD_voidSendCommand(DISPLAY_ON_OFF_CMD);
    1260:	8f e0       	ldi	r24, 0x0F	; 15
    1262:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
	LCD_voidSendCommand(DISPALY_CLEAR_CMD);
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
#elif LCD_INIT_MODE == FOUR_BIT_MODE
#endif
}
    126c:	2e 96       	adiw	r28, 0x0e	; 14
    126e:	0f b6       	in	r0, 0x3f	; 63
    1270:	f8 94       	cli
    1272:	de bf       	out	0x3e, r29	; 62
    1274:	0f be       	out	0x3f, r0	; 63
    1276:	cd bf       	out	0x3d, r28	; 61
    1278:	cf 91       	pop	r28
    127a:	df 91       	pop	r29
    127c:	08 95       	ret

0000127e <LCD_voidSendCommand>:

static void LCD_voidSendCommand(u8 Copy_u8Command)
{
    127e:	df 93       	push	r29
    1280:	cf 93       	push	r28
    1282:	cd b7       	in	r28, 0x3d	; 61
    1284:	de b7       	in	r29, 0x3e	; 62
    1286:	2f 97       	sbiw	r28, 0x0f	; 15
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	f8 94       	cli
    128c:	de bf       	out	0x3e, r29	; 62
    128e:	0f be       	out	0x3f, r0	; 63
    1290:	cd bf       	out	0x3d, r28	; 61
    1292:	8f 87       	std	Y+15, r24	; 0x0f
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,LOW);
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	61 e0       	ldi	r22, 0x01	; 1
    1298:	40 e0       	ldi	r20, 0x00	; 0
    129a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,LOW);
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	60 e0       	ldi	r22, 0x00	; 0
    12a2:	40 e0       	ldi	r20, 0x00	; 0
    12a4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>

	MDIO_voidSetPortSpecificValue(LCD_DATA_PORT,Copy_u8Command);
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	6f 85       	ldd	r22, Y+15	; 0x0f
    12ac:	0e 94 5d 08 	call	0x10ba	; 0x10ba <MDIO_voidSetPortSpecificValue>
	/****SEND  ENABLE PULSE *****/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,LOW);
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	62 e0       	ldi	r22, 0x02	; 2
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,HIGH);
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	62 e0       	ldi	r22, 0x02	; 2
    12be:	41 e0       	ldi	r20, 0x01	; 1
    12c0:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	a0 e0       	ldi	r26, 0x00	; 0
    12ca:	b0 e4       	ldi	r27, 0x40	; 64
    12cc:	8b 87       	std	Y+11, r24	; 0x0b
    12ce:	9c 87       	std	Y+12, r25	; 0x0c
    12d0:	ad 87       	std	Y+13, r26	; 0x0d
    12d2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    12d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    12d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    12da:	9e 85       	ldd	r25, Y+14	; 0x0e
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	4a ef       	ldi	r20, 0xFA	; 250
    12e2:	54 e4       	ldi	r21, 0x44	; 68
    12e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	8f 83       	std	Y+7, r24	; 0x07
    12ee:	98 87       	std	Y+8, r25	; 0x08
    12f0:	a9 87       	std	Y+9, r26	; 0x09
    12f2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    12f4:	6f 81       	ldd	r22, Y+7	; 0x07
    12f6:	78 85       	ldd	r23, Y+8	; 0x08
    12f8:	89 85       	ldd	r24, Y+9	; 0x09
    12fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	40 e8       	ldi	r20, 0x80	; 128
    1302:	5f e3       	ldi	r21, 0x3F	; 63
    1304:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1308:	88 23       	and	r24, r24
    130a:	2c f4       	brge	.+10     	; 0x1316 <LCD_voidSendCommand+0x98>
		__ticks = 1;
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	9e 83       	std	Y+6, r25	; 0x06
    1312:	8d 83       	std	Y+5, r24	; 0x05
    1314:	3f c0       	rjmp	.+126    	; 0x1394 <LCD_voidSendCommand+0x116>
	else if (__tmp > 65535)
    1316:	6f 81       	ldd	r22, Y+7	; 0x07
    1318:	78 85       	ldd	r23, Y+8	; 0x08
    131a:	89 85       	ldd	r24, Y+9	; 0x09
    131c:	9a 85       	ldd	r25, Y+10	; 0x0a
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	3f ef       	ldi	r19, 0xFF	; 255
    1322:	4f e7       	ldi	r20, 0x7F	; 127
    1324:	57 e4       	ldi	r21, 0x47	; 71
    1326:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    132a:	18 16       	cp	r1, r24
    132c:	4c f5       	brge	.+82     	; 0x1380 <LCD_voidSendCommand+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    132e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1330:	7c 85       	ldd	r23, Y+12	; 0x0c
    1332:	8d 85       	ldd	r24, Y+13	; 0x0d
    1334:	9e 85       	ldd	r25, Y+14	; 0x0e
    1336:	20 e0       	ldi	r18, 0x00	; 0
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	40 e2       	ldi	r20, 0x20	; 32
    133c:	51 e4       	ldi	r21, 0x41	; 65
    133e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1342:	dc 01       	movw	r26, r24
    1344:	cb 01       	movw	r24, r22
    1346:	bc 01       	movw	r22, r24
    1348:	cd 01       	movw	r24, r26
    134a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	9e 83       	std	Y+6, r25	; 0x06
    1354:	8d 83       	std	Y+5, r24	; 0x05
    1356:	0f c0       	rjmp	.+30     	; 0x1376 <LCD_voidSendCommand+0xf8>
    1358:	88 ec       	ldi	r24, 0xC8	; 200
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	9c 83       	std	Y+4, r25	; 0x04
    135e:	8b 83       	std	Y+3, r24	; 0x03
    1360:	8b 81       	ldd	r24, Y+3	; 0x03
    1362:	9c 81       	ldd	r25, Y+4	; 0x04
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	f1 f7       	brne	.-4      	; 0x1364 <LCD_voidSendCommand+0xe6>
    1368:	9c 83       	std	Y+4, r25	; 0x04
    136a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    136c:	8d 81       	ldd	r24, Y+5	; 0x05
    136e:	9e 81       	ldd	r25, Y+6	; 0x06
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	9e 83       	std	Y+6, r25	; 0x06
    1374:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1376:	8d 81       	ldd	r24, Y+5	; 0x05
    1378:	9e 81       	ldd	r25, Y+6	; 0x06
    137a:	00 97       	sbiw	r24, 0x00	; 0
    137c:	69 f7       	brne	.-38     	; 0x1358 <LCD_voidSendCommand+0xda>
    137e:	14 c0       	rjmp	.+40     	; 0x13a8 <LCD_voidSendCommand+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1380:	6f 81       	ldd	r22, Y+7	; 0x07
    1382:	78 85       	ldd	r23, Y+8	; 0x08
    1384:	89 85       	ldd	r24, Y+9	; 0x09
    1386:	9a 85       	ldd	r25, Y+10	; 0x0a
    1388:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    138c:	dc 01       	movw	r26, r24
    138e:	cb 01       	movw	r24, r22
    1390:	9e 83       	std	Y+6, r25	; 0x06
    1392:	8d 83       	std	Y+5, r24	; 0x05
    1394:	8d 81       	ldd	r24, Y+5	; 0x05
    1396:	9e 81       	ldd	r25, Y+6	; 0x06
    1398:	9a 83       	std	Y+2, r25	; 0x02
    139a:	89 83       	std	Y+1, r24	; 0x01
    139c:	89 81       	ldd	r24, Y+1	; 0x01
    139e:	9a 81       	ldd	r25, Y+2	; 0x02
    13a0:	01 97       	sbiw	r24, 0x01	; 1
    13a2:	f1 f7       	brne	.-4      	; 0x13a0 <LCD_voidSendCommand+0x122>
    13a4:	9a 83       	std	Y+2, r25	; 0x02
    13a6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,LOW);
    13a8:	81 e0       	ldi	r24, 0x01	; 1
    13aa:	62 e0       	ldi	r22, 0x02	; 2
    13ac:	40 e0       	ldi	r20, 0x00	; 0
    13ae:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>


}
    13b2:	2f 96       	adiw	r28, 0x0f	; 15
    13b4:	0f b6       	in	r0, 0x3f	; 63
    13b6:	f8 94       	cli
    13b8:	de bf       	out	0x3e, r29	; 62
    13ba:	0f be       	out	0x3f, r0	; 63
    13bc:	cd bf       	out	0x3d, r28	; 61
    13be:	cf 91       	pop	r28
    13c0:	df 91       	pop	r29
    13c2:	08 95       	ret

000013c4 <LCD_voidSendData>:

void LCD_voidSendData(u8 Copy_u8Data)
{
    13c4:	df 93       	push	r29
    13c6:	cf 93       	push	r28
    13c8:	cd b7       	in	r28, 0x3d	; 61
    13ca:	de b7       	in	r29, 0x3e	; 62
    13cc:	2f 97       	sbiw	r28, 0x0f	; 15
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	f8 94       	cli
    13d2:	de bf       	out	0x3e, r29	; 62
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	cd bf       	out	0x3d, r28	; 61
    13d8:	8f 87       	std	Y+15, r24	; 0x0f
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,HIGH);
    13da:	81 e0       	ldi	r24, 0x01	; 1
    13dc:	61 e0       	ldi	r22, 0x01	; 1
    13de:	41 e0       	ldi	r20, 0x01	; 1
    13e0:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,LOW);
    13e4:	81 e0       	ldi	r24, 0x01	; 1
    13e6:	60 e0       	ldi	r22, 0x00	; 0
    13e8:	40 e0       	ldi	r20, 0x00	; 0
    13ea:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
	MDIO_voidSetPortSpecificValue(LCD_DATA_PORT,Copy_u8Data);
    13ee:	80 e0       	ldi	r24, 0x00	; 0
    13f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    13f2:	0e 94 5d 08 	call	0x10ba	; 0x10ba <MDIO_voidSetPortSpecificValue>
	/****SEND  ENABLE PULSE *****/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,LOW);
    13f6:	81 e0       	ldi	r24, 0x01	; 1
    13f8:	62 e0       	ldi	r22, 0x02	; 2
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,HIGH);
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	62 e0       	ldi	r22, 0x02	; 2
    1404:	41 e0       	ldi	r20, 0x01	; 1
    1406:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	a0 e0       	ldi	r26, 0x00	; 0
    1410:	b0 e4       	ldi	r27, 0x40	; 64
    1412:	8b 87       	std	Y+11, r24	; 0x0b
    1414:	9c 87       	std	Y+12, r25	; 0x0c
    1416:	ad 87       	std	Y+13, r26	; 0x0d
    1418:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    141a:	6b 85       	ldd	r22, Y+11	; 0x0b
    141c:	7c 85       	ldd	r23, Y+12	; 0x0c
    141e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1420:	9e 85       	ldd	r25, Y+14	; 0x0e
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	4a ef       	ldi	r20, 0xFA	; 250
    1428:	54 e4       	ldi	r21, 0x44	; 68
    142a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    142e:	dc 01       	movw	r26, r24
    1430:	cb 01       	movw	r24, r22
    1432:	8f 83       	std	Y+7, r24	; 0x07
    1434:	98 87       	std	Y+8, r25	; 0x08
    1436:	a9 87       	std	Y+9, r26	; 0x09
    1438:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    143a:	6f 81       	ldd	r22, Y+7	; 0x07
    143c:	78 85       	ldd	r23, Y+8	; 0x08
    143e:	89 85       	ldd	r24, Y+9	; 0x09
    1440:	9a 85       	ldd	r25, Y+10	; 0x0a
    1442:	20 e0       	ldi	r18, 0x00	; 0
    1444:	30 e0       	ldi	r19, 0x00	; 0
    1446:	40 e8       	ldi	r20, 0x80	; 128
    1448:	5f e3       	ldi	r21, 0x3F	; 63
    144a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    144e:	88 23       	and	r24, r24
    1450:	2c f4       	brge	.+10     	; 0x145c <LCD_voidSendData+0x98>
		__ticks = 1;
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	9e 83       	std	Y+6, r25	; 0x06
    1458:	8d 83       	std	Y+5, r24	; 0x05
    145a:	3f c0       	rjmp	.+126    	; 0x14da <LCD_voidSendData+0x116>
	else if (__tmp > 65535)
    145c:	6f 81       	ldd	r22, Y+7	; 0x07
    145e:	78 85       	ldd	r23, Y+8	; 0x08
    1460:	89 85       	ldd	r24, Y+9	; 0x09
    1462:	9a 85       	ldd	r25, Y+10	; 0x0a
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	3f ef       	ldi	r19, 0xFF	; 255
    1468:	4f e7       	ldi	r20, 0x7F	; 127
    146a:	57 e4       	ldi	r21, 0x47	; 71
    146c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1470:	18 16       	cp	r1, r24
    1472:	4c f5       	brge	.+82     	; 0x14c6 <LCD_voidSendData+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1474:	6b 85       	ldd	r22, Y+11	; 0x0b
    1476:	7c 85       	ldd	r23, Y+12	; 0x0c
    1478:	8d 85       	ldd	r24, Y+13	; 0x0d
    147a:	9e 85       	ldd	r25, Y+14	; 0x0e
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	40 e2       	ldi	r20, 0x20	; 32
    1482:	51 e4       	ldi	r21, 0x41	; 65
    1484:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1488:	dc 01       	movw	r26, r24
    148a:	cb 01       	movw	r24, r22
    148c:	bc 01       	movw	r22, r24
    148e:	cd 01       	movw	r24, r26
    1490:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1494:	dc 01       	movw	r26, r24
    1496:	cb 01       	movw	r24, r22
    1498:	9e 83       	std	Y+6, r25	; 0x06
    149a:	8d 83       	std	Y+5, r24	; 0x05
    149c:	0f c0       	rjmp	.+30     	; 0x14bc <LCD_voidSendData+0xf8>
    149e:	88 ec       	ldi	r24, 0xC8	; 200
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	9c 83       	std	Y+4, r25	; 0x04
    14a4:	8b 83       	std	Y+3, r24	; 0x03
    14a6:	8b 81       	ldd	r24, Y+3	; 0x03
    14a8:	9c 81       	ldd	r25, Y+4	; 0x04
    14aa:	01 97       	sbiw	r24, 0x01	; 1
    14ac:	f1 f7       	brne	.-4      	; 0x14aa <LCD_voidSendData+0xe6>
    14ae:	9c 83       	std	Y+4, r25	; 0x04
    14b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14b2:	8d 81       	ldd	r24, Y+5	; 0x05
    14b4:	9e 81       	ldd	r25, Y+6	; 0x06
    14b6:	01 97       	sbiw	r24, 0x01	; 1
    14b8:	9e 83       	std	Y+6, r25	; 0x06
    14ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14bc:	8d 81       	ldd	r24, Y+5	; 0x05
    14be:	9e 81       	ldd	r25, Y+6	; 0x06
    14c0:	00 97       	sbiw	r24, 0x00	; 0
    14c2:	69 f7       	brne	.-38     	; 0x149e <LCD_voidSendData+0xda>
    14c4:	14 c0       	rjmp	.+40     	; 0x14ee <LCD_voidSendData+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14c6:	6f 81       	ldd	r22, Y+7	; 0x07
    14c8:	78 85       	ldd	r23, Y+8	; 0x08
    14ca:	89 85       	ldd	r24, Y+9	; 0x09
    14cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14d2:	dc 01       	movw	r26, r24
    14d4:	cb 01       	movw	r24, r22
    14d6:	9e 83       	std	Y+6, r25	; 0x06
    14d8:	8d 83       	std	Y+5, r24	; 0x05
    14da:	8d 81       	ldd	r24, Y+5	; 0x05
    14dc:	9e 81       	ldd	r25, Y+6	; 0x06
    14de:	9a 83       	std	Y+2, r25	; 0x02
    14e0:	89 83       	std	Y+1, r24	; 0x01
    14e2:	89 81       	ldd	r24, Y+1	; 0x01
    14e4:	9a 81       	ldd	r25, Y+2	; 0x02
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	f1 f7       	brne	.-4      	; 0x14e6 <LCD_voidSendData+0x122>
    14ea:	9a 83       	std	Y+2, r25	; 0x02
    14ec:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,LOW);
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	62 e0       	ldi	r22, 0x02	; 2
    14f2:	40 e0       	ldi	r20, 0x00	; 0
    14f4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <MDIO_voidSetPinValue>

}
    14f8:	2f 96       	adiw	r28, 0x0f	; 15
    14fa:	0f b6       	in	r0, 0x3f	; 63
    14fc:	f8 94       	cli
    14fe:	de bf       	out	0x3e, r29	; 62
    1500:	0f be       	out	0x3f, r0	; 63
    1502:	cd bf       	out	0x3d, r28	; 61
    1504:	cf 91       	pop	r28
    1506:	df 91       	pop	r29
    1508:	08 95       	ret

0000150a <LCD_ClearDisplay>:

void LCD_ClearDisplay(void)
{
    150a:	df 93       	push	r29
    150c:	cf 93       	push	r28
    150e:	cd b7       	in	r28, 0x3d	; 61
    1510:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCommand(DISPALY_CLEAR_CMD);
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
}
    1518:	cf 91       	pop	r28
    151a:	df 91       	pop	r29
    151c:	08 95       	ret

0000151e <LCD_voidGoToXY>:
void LCD_voidGoToXY(u8 Copy_u8XPos ,u8 Copy_u8YPos)
{
    151e:	df 93       	push	r29
    1520:	cf 93       	push	r28
    1522:	00 d0       	rcall	.+0      	; 0x1524 <LCD_voidGoToXY+0x6>
    1524:	0f 92       	push	r0
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	8a 83       	std	Y+2, r24	; 0x02
    152c:	6b 83       	std	Y+3, r22	; 0x03
	/*******Calculate the address on LCD********/
	u8 Local_u8CharacterAddress = 0;
    152e:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8XPos == LCD_ROW0)
    1530:	8a 81       	ldd	r24, Y+2	; 0x02
    1532:	88 23       	and	r24, r24
    1534:	19 f4       	brne	.+6      	; 0x153c <LCD_voidGoToXY+0x1e>
	{
		//if x = 0 -> address = Y position
		Local_u8CharacterAddress = Copy_u8YPos;
    1536:	8b 81       	ldd	r24, Y+3	; 0x03
    1538:	89 83       	std	Y+1, r24	; 0x01
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <LCD_voidGoToXY+0x2a>
	}
	else if(Copy_u8XPos == LCD_ROW1)
    153c:	8a 81       	ldd	r24, Y+2	; 0x02
    153e:	81 30       	cpi	r24, 0x01	; 1
    1540:	19 f4       	brne	.+6      	; 0x1548 <LCD_voidGoToXY+0x2a>
	{
		//if x = 1 -> address = Y position + 0x40
		Local_u8CharacterAddress = Copy_u8YPos + 0x40;
    1542:	8b 81       	ldd	r24, Y+3	; 0x03
    1544:	80 5c       	subi	r24, 0xC0	; 192
    1546:	89 83       	std	Y+1, r24	; 0x01
	else
	{
		//Raise an Error
	}
	/**Set the 7th bit in the address variable**/
	SET_BIT(Local_u8CharacterAddress ,7);
    1548:	89 81       	ldd	r24, Y+1	; 0x01
    154a:	80 68       	ori	r24, 0x80	; 128
    154c:	89 83       	std	Y+1, r24	; 0x01
	/**Send the address variable to commend**/
	LCD_voidSendCommand(Local_u8CharacterAddress);
    154e:	89 81       	ldd	r24, Y+1	; 0x01
    1550:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
}
    1554:	0f 90       	pop	r0
    1556:	0f 90       	pop	r0
    1558:	0f 90       	pop	r0
    155a:	cf 91       	pop	r28
    155c:	df 91       	pop	r29
    155e:	08 95       	ret

00001560 <LCD_void_SendString>:
void LCD_void_SendString(u8 *Copy_Pu8StringArray)
{
    1560:	df 93       	push	r29
    1562:	cf 93       	push	r28
    1564:	00 d0       	rcall	.+0      	; 0x1566 <LCD_void_SendString+0x6>
    1566:	0f 92       	push	r0
    1568:	cd b7       	in	r28, 0x3d	; 61
    156a:	de b7       	in	r29, 0x3e	; 62
    156c:	9b 83       	std	Y+3, r25	; 0x03
    156e:	8a 83       	std	Y+2, r24	; 0x02
	u8 Copy_Pu8LoopCounter = 0;
    1570:	19 82       	std	Y+1, r1	; 0x01
    1572:	0e c0       	rjmp	.+28     	; 0x1590 <LCD_void_SendString+0x30>
	while(Copy_Pu8StringArray[Copy_Pu8LoopCounter] != '\0')	//NULL
	{
		LCD_voidSendData(Copy_Pu8StringArray[Copy_Pu8LoopCounter]);
    1574:	89 81       	ldd	r24, Y+1	; 0x01
    1576:	28 2f       	mov	r18, r24
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	8a 81       	ldd	r24, Y+2	; 0x02
    157c:	9b 81       	ldd	r25, Y+3	; 0x03
    157e:	fc 01       	movw	r30, r24
    1580:	e2 0f       	add	r30, r18
    1582:	f3 1f       	adc	r31, r19
    1584:	80 81       	ld	r24, Z
    1586:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <LCD_voidSendData>
		Copy_Pu8LoopCounter++;
    158a:	89 81       	ldd	r24, Y+1	; 0x01
    158c:	8f 5f       	subi	r24, 0xFF	; 255
    158e:	89 83       	std	Y+1, r24	; 0x01
	LCD_voidSendCommand(Local_u8CharacterAddress);
}
void LCD_void_SendString(u8 *Copy_Pu8StringArray)
{
	u8 Copy_Pu8LoopCounter = 0;
	while(Copy_Pu8StringArray[Copy_Pu8LoopCounter] != '\0')	//NULL
    1590:	89 81       	ldd	r24, Y+1	; 0x01
    1592:	28 2f       	mov	r18, r24
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	8a 81       	ldd	r24, Y+2	; 0x02
    1598:	9b 81       	ldd	r25, Y+3	; 0x03
    159a:	fc 01       	movw	r30, r24
    159c:	e2 0f       	add	r30, r18
    159e:	f3 1f       	adc	r31, r19
    15a0:	80 81       	ld	r24, Z
    15a2:	88 23       	and	r24, r24
    15a4:	39 f7       	brne	.-50     	; 0x1574 <LCD_void_SendString+0x14>
	{
		LCD_voidSendData(Copy_Pu8StringArray[Copy_Pu8LoopCounter]);
		Copy_Pu8LoopCounter++;
	}
}
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	0f 90       	pop	r0
    15ac:	cf 91       	pop	r28
    15ae:	df 91       	pop	r29
    15b0:	08 95       	ret

000015b2 <LCD_void_SendNumber>:

void LCD_void_SendNumber(u32 Copy_u32Number)
{
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	df 93       	push	r29
    15b8:	cf 93       	push	r28
    15ba:	cd b7       	in	r28, 0x3d	; 61
    15bc:	de b7       	in	r29, 0x3e	; 62
    15be:	2f 97       	sbiw	r28, 0x0f	; 15
    15c0:	0f b6       	in	r0, 0x3f	; 63
    15c2:	f8 94       	cli
    15c4:	de bf       	out	0x3e, r29	; 62
    15c6:	0f be       	out	0x3f, r0	; 63
    15c8:	cd bf       	out	0x3d, r28	; 61
    15ca:	6c 87       	std	Y+12, r22	; 0x0c
    15cc:	7d 87       	std	Y+13, r23	; 0x0d
    15ce:	8e 87       	std	Y+14, r24	; 0x0e
    15d0:	9f 87       	std	Y+15, r25	; 0x0f
	u8 Local_u8ArrayNumber[10];
	s8 Local_s8LoopCounter = 0;
    15d2:	19 82       	std	Y+1, r1	; 0x01
    15d4:	2f c0       	rjmp	.+94     	; 0x1634 <LCD_void_SendNumber+0x82>
	while(Copy_u32Number != 0)
	{
		Local_u8ArrayNumber[Local_s8LoopCounter] = Copy_u32Number % 10;
    15d6:	89 81       	ldd	r24, Y+1	; 0x01
    15d8:	08 2f       	mov	r16, r24
    15da:	11 27       	eor	r17, r17
    15dc:	07 fd       	sbrc	r16, 7
    15de:	10 95       	com	r17
    15e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    15e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    15e4:	ae 85       	ldd	r26, Y+14	; 0x0e
    15e6:	bf 85       	ldd	r27, Y+15	; 0x0f
    15e8:	2a e0       	ldi	r18, 0x0A	; 10
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	40 e0       	ldi	r20, 0x00	; 0
    15ee:	50 e0       	ldi	r21, 0x00	; 0
    15f0:	bc 01       	movw	r22, r24
    15f2:	cd 01       	movw	r24, r26
    15f4:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__udivmodsi4>
    15f8:	dc 01       	movw	r26, r24
    15fa:	cb 01       	movw	r24, r22
    15fc:	28 2f       	mov	r18, r24
    15fe:	ce 01       	movw	r24, r28
    1600:	02 96       	adiw	r24, 0x02	; 2
    1602:	fc 01       	movw	r30, r24
    1604:	e0 0f       	add	r30, r16
    1606:	f1 1f       	adc	r31, r17
    1608:	20 83       	st	Z, r18
		Copy_u32Number /=10;
    160a:	8c 85       	ldd	r24, Y+12	; 0x0c
    160c:	9d 85       	ldd	r25, Y+13	; 0x0d
    160e:	ae 85       	ldd	r26, Y+14	; 0x0e
    1610:	bf 85       	ldd	r27, Y+15	; 0x0f
    1612:	2a e0       	ldi	r18, 0x0A	; 10
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	40 e0       	ldi	r20, 0x00	; 0
    1618:	50 e0       	ldi	r21, 0x00	; 0
    161a:	bc 01       	movw	r22, r24
    161c:	cd 01       	movw	r24, r26
    161e:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__udivmodsi4>
    1622:	da 01       	movw	r26, r20
    1624:	c9 01       	movw	r24, r18
    1626:	8c 87       	std	Y+12, r24	; 0x0c
    1628:	9d 87       	std	Y+13, r25	; 0x0d
    162a:	ae 87       	std	Y+14, r26	; 0x0e
    162c:	bf 87       	std	Y+15, r27	; 0x0f
		Local_s8LoopCounter++;
    162e:	89 81       	ldd	r24, Y+1	; 0x01
    1630:	8f 5f       	subi	r24, 0xFF	; 255
    1632:	89 83       	std	Y+1, r24	; 0x01

void LCD_void_SendNumber(u32 Copy_u32Number)
{
	u8 Local_u8ArrayNumber[10];
	s8 Local_s8LoopCounter = 0;
	while(Copy_u32Number != 0)
    1634:	8c 85       	ldd	r24, Y+12	; 0x0c
    1636:	9d 85       	ldd	r25, Y+13	; 0x0d
    1638:	ae 85       	ldd	r26, Y+14	; 0x0e
    163a:	bf 85       	ldd	r27, Y+15	; 0x0f
    163c:	00 97       	sbiw	r24, 0x00	; 0
    163e:	a1 05       	cpc	r26, r1
    1640:	b1 05       	cpc	r27, r1
    1642:	49 f6       	brne	.-110    	; 0x15d6 <LCD_void_SendNumber+0x24>
	{
		Local_u8ArrayNumber[Local_s8LoopCounter] = Copy_u32Number % 10;
		Copy_u32Number /=10;
		Local_s8LoopCounter++;
	}
	Local_s8LoopCounter--;
    1644:	89 81       	ldd	r24, Y+1	; 0x01
    1646:	81 50       	subi	r24, 0x01	; 1
    1648:	89 83       	std	Y+1, r24	; 0x01
    164a:	11 c0       	rjmp	.+34     	; 0x166e <LCD_void_SendNumber+0xbc>
	while(Local_s8LoopCounter >= 0)
	{
		LCD_voidSendData(Local_u8ArrayNumber[Local_s8LoopCounter] + '0');
    164c:	89 81       	ldd	r24, Y+1	; 0x01
    164e:	28 2f       	mov	r18, r24
    1650:	33 27       	eor	r19, r19
    1652:	27 fd       	sbrc	r18, 7
    1654:	30 95       	com	r19
    1656:	ce 01       	movw	r24, r28
    1658:	02 96       	adiw	r24, 0x02	; 2
    165a:	fc 01       	movw	r30, r24
    165c:	e2 0f       	add	r30, r18
    165e:	f3 1f       	adc	r31, r19
    1660:	80 81       	ld	r24, Z
    1662:	80 5d       	subi	r24, 0xD0	; 208
    1664:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <LCD_voidSendData>
		Local_s8LoopCounter--;
    1668:	89 81       	ldd	r24, Y+1	; 0x01
    166a:	81 50       	subi	r24, 0x01	; 1
    166c:	89 83       	std	Y+1, r24	; 0x01
		Local_u8ArrayNumber[Local_s8LoopCounter] = Copy_u32Number % 10;
		Copy_u32Number /=10;
		Local_s8LoopCounter++;
	}
	Local_s8LoopCounter--;
	while(Local_s8LoopCounter >= 0)
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	88 23       	and	r24, r24
    1672:	64 f7       	brge	.-40     	; 0x164c <LCD_void_SendNumber+0x9a>
	{
		LCD_voidSendData(Local_u8ArrayNumber[Local_s8LoopCounter] + '0');
		Local_s8LoopCounter--;
	}
}
    1674:	2f 96       	adiw	r28, 0x0f	; 15
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
    1680:	cf 91       	pop	r28
    1682:	df 91       	pop	r29
    1684:	1f 91       	pop	r17
    1686:	0f 91       	pop	r16
    1688:	08 95       	ret

0000168a <LCD_voidSendCustomCharacter>:

void LCD_voidSendCustomCharacter(u8 *Copy_pu8CharacterArray, u8 Copy_u8PatternNumber,  u8 Copy_u8Xposition,  u8 Copy_u8Yposition)
{
    168a:	df 93       	push	r29
    168c:	cf 93       	push	r28
    168e:	cd b7       	in	r28, 0x3d	; 61
    1690:	de b7       	in	r29, 0x3e	; 62
    1692:	27 97       	sbiw	r28, 0x07	; 7
    1694:	0f b6       	in	r0, 0x3f	; 63
    1696:	f8 94       	cli
    1698:	de bf       	out	0x3e, r29	; 62
    169a:	0f be       	out	0x3f, r0	; 63
    169c:	cd bf       	out	0x3d, r28	; 61
    169e:	9c 83       	std	Y+4, r25	; 0x04
    16a0:	8b 83       	std	Y+3, r24	; 0x03
    16a2:	6d 83       	std	Y+5, r22	; 0x05
    16a4:	4e 83       	std	Y+6, r20	; 0x06
    16a6:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8LoopCounter;
	u8 Local_u8CGRAMAddress=0;
    16a8:	19 82       	std	Y+1, r1	; 0x01
	Local_u8CGRAMAddress = Copy_u8PatternNumber * 8;
    16aa:	8d 81       	ldd	r24, Y+5	; 0x05
    16ac:	88 2f       	mov	r24, r24
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	88 0f       	add	r24, r24
    16b2:	99 1f       	adc	r25, r25
    16b4:	88 0f       	add	r24, r24
    16b6:	99 1f       	adc	r25, r25
    16b8:	88 0f       	add	r24, r24
    16ba:	99 1f       	adc	r25, r25
    16bc:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(Local_u8CGRAMAddress ,6);
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	80 64       	ori	r24, 0x40	; 64
    16c2:	89 83       	std	Y+1, r24	; 0x01
	LCD_voidSendCommand(Local_u8CGRAMAddress);
    16c4:	89 81       	ldd	r24, Y+1	; 0x01
    16c6:	0e 94 3f 09 	call	0x127e	; 0x127e <LCD_voidSendCommand>
	for(Local_u8LoopCounter=0 ; Local_u8LoopCounter <8;Local_u8LoopCounter++)
    16ca:	1a 82       	std	Y+2, r1	; 0x02
    16cc:	0e c0       	rjmp	.+28     	; 0x16ea <LCD_voidSendCustomCharacter+0x60>
	{
		LCD_voidSendData(Copy_pu8CharacterArray[Local_u8LoopCounter]);
    16ce:	8a 81       	ldd	r24, Y+2	; 0x02
    16d0:	28 2f       	mov	r18, r24
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	8b 81       	ldd	r24, Y+3	; 0x03
    16d6:	9c 81       	ldd	r25, Y+4	; 0x04
    16d8:	fc 01       	movw	r30, r24
    16da:	e2 0f       	add	r30, r18
    16dc:	f3 1f       	adc	r31, r19
    16de:	80 81       	ld	r24, Z
    16e0:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <LCD_voidSendData>
	u8 Local_u8LoopCounter;
	u8 Local_u8CGRAMAddress=0;
	Local_u8CGRAMAddress = Copy_u8PatternNumber * 8;
	SET_BIT(Local_u8CGRAMAddress ,6);
	LCD_voidSendCommand(Local_u8CGRAMAddress);
	for(Local_u8LoopCounter=0 ; Local_u8LoopCounter <8;Local_u8LoopCounter++)
    16e4:	8a 81       	ldd	r24, Y+2	; 0x02
    16e6:	8f 5f       	subi	r24, 0xFF	; 255
    16e8:	8a 83       	std	Y+2, r24	; 0x02
    16ea:	8a 81       	ldd	r24, Y+2	; 0x02
    16ec:	88 30       	cpi	r24, 0x08	; 8
    16ee:	78 f3       	brcs	.-34     	; 0x16ce <LCD_voidSendCustomCharacter+0x44>
	{
		LCD_voidSendData(Copy_pu8CharacterArray[Local_u8LoopCounter]);
	}
	LCD_voidGoToXY(Copy_u8Xposition,Copy_u8Yposition);
    16f0:	8e 81       	ldd	r24, Y+6	; 0x06
    16f2:	6f 81       	ldd	r22, Y+7	; 0x07
    16f4:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
	LCD_voidSendData(Copy_u8PatternNumber);
    16f8:	8d 81       	ldd	r24, Y+5	; 0x05
    16fa:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <LCD_voidSendData>
}
    16fe:	27 96       	adiw	r28, 0x07	; 7
    1700:	0f b6       	in	r0, 0x3f	; 63
    1702:	f8 94       	cli
    1704:	de bf       	out	0x3e, r29	; 62
    1706:	0f be       	out	0x3f, r0	; 63
    1708:	cd bf       	out	0x3d, r28	; 61
    170a:	cf 91       	pop	r28
    170c:	df 91       	pop	r29
    170e:	08 95       	ret

00001710 <main>:
//#include"../MCAL/DIO/DIO_priv.h"

#include"../HAL/LCD/LCD_int.h"

void main(void)
{
    1710:	df 93       	push	r29
    1712:	cf 93       	push	r28
    1714:	cd b7       	in	r28, 0x3d	; 61
    1716:	de b7       	in	r29, 0x3e	; 62
    1718:	c6 5a       	subi	r28, 0xA6	; 166
    171a:	d0 40       	sbci	r29, 0x00	; 0
    171c:	0f b6       	in	r0, 0x3f	; 63
    171e:	f8 94       	cli
    1720:	de bf       	out	0x3e, r29	; 62
    1722:	0f be       	out	0x3f, r0	; 63
    1724:	cd bf       	out	0x3d, r28	; 61
			  0x0E,
			  0x04,
			  0x0E,
			  0x11,
			  0x00
			};
    1726:	ce 01       	movw	r24, r28
    1728:	4d 96       	adiw	r24, 0x1d	; 29
    172a:	e7 96       	adiw	r28, 0x37	; 55
    172c:	9f af       	std	Y+63, r25	; 0x3f
    172e:	8e af       	std	Y+62, r24	; 0x3e
    1730:	e7 97       	sbiw	r28, 0x37	; 55
    1732:	a6 e0       	ldi	r26, 0x06	; 6
    1734:	b1 e0       	ldi	r27, 0x01	; 1
    1736:	e9 96       	adiw	r28, 0x39	; 57
    1738:	bf af       	std	Y+63, r27	; 0x3f
    173a:	ae af       	std	Y+62, r26	; 0x3e
    173c:	e9 97       	sbiw	r28, 0x39	; 57
    173e:	b8 e0       	ldi	r27, 0x08	; 8
    1740:	ea 96       	adiw	r28, 0x3a	; 58
    1742:	bf af       	std	Y+63, r27	; 0x3f
    1744:	ea 97       	sbiw	r28, 0x3a	; 58
    1746:	e9 96       	adiw	r28, 0x39	; 57
    1748:	ee ad       	ldd	r30, Y+62	; 0x3e
    174a:	ff ad       	ldd	r31, Y+63	; 0x3f
    174c:	e9 97       	sbiw	r28, 0x39	; 57
    174e:	00 80       	ld	r0, Z
    1750:	e9 96       	adiw	r28, 0x39	; 57
    1752:	8e ad       	ldd	r24, Y+62	; 0x3e
    1754:	9f ad       	ldd	r25, Y+63	; 0x3f
    1756:	e9 97       	sbiw	r28, 0x39	; 57
    1758:	01 96       	adiw	r24, 0x01	; 1
    175a:	e9 96       	adiw	r28, 0x39	; 57
    175c:	9f af       	std	Y+63, r25	; 0x3f
    175e:	8e af       	std	Y+62, r24	; 0x3e
    1760:	e9 97       	sbiw	r28, 0x39	; 57
    1762:	e7 96       	adiw	r28, 0x37	; 55
    1764:	ae ad       	ldd	r26, Y+62	; 0x3e
    1766:	bf ad       	ldd	r27, Y+63	; 0x3f
    1768:	e7 97       	sbiw	r28, 0x37	; 55
    176a:	0c 92       	st	X, r0
    176c:	e7 96       	adiw	r28, 0x37	; 55
    176e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1770:	ff ad       	ldd	r31, Y+63	; 0x3f
    1772:	e7 97       	sbiw	r28, 0x37	; 55
    1774:	31 96       	adiw	r30, 0x01	; 1
    1776:	e7 96       	adiw	r28, 0x37	; 55
    1778:	ff af       	std	Y+63, r31	; 0x3f
    177a:	ee af       	std	Y+62, r30	; 0x3e
    177c:	e7 97       	sbiw	r28, 0x37	; 55
    177e:	ea 96       	adiw	r28, 0x3a	; 58
    1780:	ff ad       	ldd	r31, Y+63	; 0x3f
    1782:	ea 97       	sbiw	r28, 0x3a	; 58
    1784:	f1 50       	subi	r31, 0x01	; 1
    1786:	ea 96       	adiw	r28, 0x3a	; 58
    1788:	ff af       	std	Y+63, r31	; 0x3f
    178a:	ea 97       	sbiw	r28, 0x3a	; 58
    178c:	ea 96       	adiw	r28, 0x3a	; 58
    178e:	8f ad       	ldd	r24, Y+63	; 0x3f
    1790:	ea 97       	sbiw	r28, 0x3a	; 58
    1792:	88 23       	and	r24, r24
    1794:	c1 f6       	brne	.-80     	; 0x1746 <main+0x36>
	u8 customChar2[] = { 0x0E, 0x0E,0x15, 0x0E, 0x04, 0x0E, 0x11, 0x00};
    1796:	de 01       	movw	r26, r28
    1798:	95 96       	adiw	r26, 0x25	; 37
    179a:	ec 96       	adiw	r28, 0x3c	; 60
    179c:	bf af       	std	Y+63, r27	; 0x3f
    179e:	ae af       	std	Y+62, r26	; 0x3e
    17a0:	ec 97       	sbiw	r28, 0x3c	; 60
    17a2:	ee ef       	ldi	r30, 0xFE	; 254
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	ee 96       	adiw	r28, 0x3e	; 62
    17a8:	ff af       	std	Y+63, r31	; 0x3f
    17aa:	ee af       	std	Y+62, r30	; 0x3e
    17ac:	ee 97       	sbiw	r28, 0x3e	; 62
    17ae:	f8 e0       	ldi	r31, 0x08	; 8
    17b0:	ef 96       	adiw	r28, 0x3f	; 63
    17b2:	ff af       	std	Y+63, r31	; 0x3f
    17b4:	ef 97       	sbiw	r28, 0x3f	; 63
    17b6:	ee 96       	adiw	r28, 0x3e	; 62
    17b8:	ae ad       	ldd	r26, Y+62	; 0x3e
    17ba:	bf ad       	ldd	r27, Y+63	; 0x3f
    17bc:	ee 97       	sbiw	r28, 0x3e	; 62
    17be:	0c 90       	ld	r0, X
    17c0:	ee 96       	adiw	r28, 0x3e	; 62
    17c2:	ee ad       	ldd	r30, Y+62	; 0x3e
    17c4:	ff ad       	ldd	r31, Y+63	; 0x3f
    17c6:	ee 97       	sbiw	r28, 0x3e	; 62
    17c8:	31 96       	adiw	r30, 0x01	; 1
    17ca:	ee 96       	adiw	r28, 0x3e	; 62
    17cc:	ff af       	std	Y+63, r31	; 0x3f
    17ce:	ee af       	std	Y+62, r30	; 0x3e
    17d0:	ee 97       	sbiw	r28, 0x3e	; 62
    17d2:	ec 96       	adiw	r28, 0x3c	; 60
    17d4:	ae ad       	ldd	r26, Y+62	; 0x3e
    17d6:	bf ad       	ldd	r27, Y+63	; 0x3f
    17d8:	ec 97       	sbiw	r28, 0x3c	; 60
    17da:	0c 92       	st	X, r0
    17dc:	ec 96       	adiw	r28, 0x3c	; 60
    17de:	ee ad       	ldd	r30, Y+62	; 0x3e
    17e0:	ff ad       	ldd	r31, Y+63	; 0x3f
    17e2:	ec 97       	sbiw	r28, 0x3c	; 60
    17e4:	31 96       	adiw	r30, 0x01	; 1
    17e6:	ec 96       	adiw	r28, 0x3c	; 60
    17e8:	ff af       	std	Y+63, r31	; 0x3f
    17ea:	ee af       	std	Y+62, r30	; 0x3e
    17ec:	ec 97       	sbiw	r28, 0x3c	; 60
    17ee:	ef 96       	adiw	r28, 0x3f	; 63
    17f0:	ff ad       	ldd	r31, Y+63	; 0x3f
    17f2:	ef 97       	sbiw	r28, 0x3f	; 63
    17f4:	f1 50       	subi	r31, 0x01	; 1
    17f6:	ef 96       	adiw	r28, 0x3f	; 63
    17f8:	ff af       	std	Y+63, r31	; 0x3f
    17fa:	ef 97       	sbiw	r28, 0x3f	; 63
    17fc:	ef 96       	adiw	r28, 0x3f	; 63
    17fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    1800:	ef 97       	sbiw	r28, 0x3f	; 63
    1802:	88 23       	and	r24, r24
    1804:	c1 f6       	brne	.-80     	; 0x17b6 <main+0xa6>
			  0x02,
			  0x12,
			  0x07,
			  0x09,
			  0x00,
			  0x00};
    1806:	de 01       	movw	r26, r28
    1808:	9d 96       	adiw	r26, 0x2d	; 45
    180a:	c1 58       	subi	r28, 0x81	; 129
    180c:	df 4f       	sbci	r29, 0xFF	; 255
    180e:	b9 83       	std	Y+1, r27	; 0x01
    1810:	a8 83       	st	Y, r26
    1812:	cf 57       	subi	r28, 0x7F	; 127
    1814:	d0 40       	sbci	r29, 0x00	; 0
    1816:	e6 ef       	ldi	r30, 0xF6	; 246
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	cf 57       	subi	r28, 0x7F	; 127
    181c:	df 4f       	sbci	r29, 0xFF	; 255
    181e:	f9 83       	std	Y+1, r31	; 0x01
    1820:	e8 83       	st	Y, r30
    1822:	c1 58       	subi	r28, 0x81	; 129
    1824:	d0 40       	sbci	r29, 0x00	; 0
    1826:	f8 e0       	ldi	r31, 0x08	; 8
    1828:	cd 57       	subi	r28, 0x7D	; 125
    182a:	df 4f       	sbci	r29, 0xFF	; 255
    182c:	f8 83       	st	Y, r31
    182e:	c3 58       	subi	r28, 0x83	; 131
    1830:	d0 40       	sbci	r29, 0x00	; 0
    1832:	cf 57       	subi	r28, 0x7F	; 127
    1834:	df 4f       	sbci	r29, 0xFF	; 255
    1836:	a8 81       	ld	r26, Y
    1838:	b9 81       	ldd	r27, Y+1	; 0x01
    183a:	c1 58       	subi	r28, 0x81	; 129
    183c:	d0 40       	sbci	r29, 0x00	; 0
    183e:	0c 90       	ld	r0, X
    1840:	cf 57       	subi	r28, 0x7F	; 127
    1842:	df 4f       	sbci	r29, 0xFF	; 255
    1844:	e8 81       	ld	r30, Y
    1846:	f9 81       	ldd	r31, Y+1	; 0x01
    1848:	c1 58       	subi	r28, 0x81	; 129
    184a:	d0 40       	sbci	r29, 0x00	; 0
    184c:	31 96       	adiw	r30, 0x01	; 1
    184e:	cf 57       	subi	r28, 0x7F	; 127
    1850:	df 4f       	sbci	r29, 0xFF	; 255
    1852:	f9 83       	std	Y+1, r31	; 0x01
    1854:	e8 83       	st	Y, r30
    1856:	c1 58       	subi	r28, 0x81	; 129
    1858:	d0 40       	sbci	r29, 0x00	; 0
    185a:	c1 58       	subi	r28, 0x81	; 129
    185c:	df 4f       	sbci	r29, 0xFF	; 255
    185e:	a8 81       	ld	r26, Y
    1860:	b9 81       	ldd	r27, Y+1	; 0x01
    1862:	cf 57       	subi	r28, 0x7F	; 127
    1864:	d0 40       	sbci	r29, 0x00	; 0
    1866:	0c 92       	st	X, r0
    1868:	c1 58       	subi	r28, 0x81	; 129
    186a:	df 4f       	sbci	r29, 0xFF	; 255
    186c:	e8 81       	ld	r30, Y
    186e:	f9 81       	ldd	r31, Y+1	; 0x01
    1870:	cf 57       	subi	r28, 0x7F	; 127
    1872:	d0 40       	sbci	r29, 0x00	; 0
    1874:	31 96       	adiw	r30, 0x01	; 1
    1876:	c1 58       	subi	r28, 0x81	; 129
    1878:	df 4f       	sbci	r29, 0xFF	; 255
    187a:	f9 83       	std	Y+1, r31	; 0x01
    187c:	e8 83       	st	Y, r30
    187e:	cf 57       	subi	r28, 0x7F	; 127
    1880:	d0 40       	sbci	r29, 0x00	; 0
    1882:	cd 57       	subi	r28, 0x7D	; 125
    1884:	df 4f       	sbci	r29, 0xFF	; 255
    1886:	f8 81       	ld	r31, Y
    1888:	c3 58       	subi	r28, 0x83	; 131
    188a:	d0 40       	sbci	r29, 0x00	; 0
    188c:	f1 50       	subi	r31, 0x01	; 1
    188e:	cd 57       	subi	r28, 0x7D	; 125
    1890:	df 4f       	sbci	r29, 0xFF	; 255
    1892:	f8 83       	st	Y, r31
    1894:	c3 58       	subi	r28, 0x83	; 131
    1896:	d0 40       	sbci	r29, 0x00	; 0
    1898:	cd 57       	subi	r28, 0x7D	; 125
    189a:	df 4f       	sbci	r29, 0xFF	; 255
    189c:	88 81       	ld	r24, Y
    189e:	c3 58       	subi	r28, 0x83	; 131
    18a0:	d0 40       	sbci	r29, 0x00	; 0
    18a2:	88 23       	and	r24, r24
    18a4:	31 f6       	brne	.-116    	; 0x1832 <main+0x122>
			  0x02,
			  0x02,
			  0x17,
			  0x09,
			  0x00,
			  0x00};
    18a6:	de 01       	movw	r26, r28
    18a8:	d5 96       	adiw	r26, 0x35	; 53
    18aa:	cc 57       	subi	r28, 0x7C	; 124
    18ac:	df 4f       	sbci	r29, 0xFF	; 255
    18ae:	b9 83       	std	Y+1, r27	; 0x01
    18b0:	a8 83       	st	Y, r26
    18b2:	c4 58       	subi	r28, 0x84	; 132
    18b4:	d0 40       	sbci	r29, 0x00	; 0
    18b6:	ee ee       	ldi	r30, 0xEE	; 238
    18b8:	f0 e0       	ldi	r31, 0x00	; 0
    18ba:	ca 57       	subi	r28, 0x7A	; 122
    18bc:	df 4f       	sbci	r29, 0xFF	; 255
    18be:	f9 83       	std	Y+1, r31	; 0x01
    18c0:	e8 83       	st	Y, r30
    18c2:	c6 58       	subi	r28, 0x86	; 134
    18c4:	d0 40       	sbci	r29, 0x00	; 0
    18c6:	f8 e0       	ldi	r31, 0x08	; 8
    18c8:	c8 57       	subi	r28, 0x78	; 120
    18ca:	df 4f       	sbci	r29, 0xFF	; 255
    18cc:	f8 83       	st	Y, r31
    18ce:	c8 58       	subi	r28, 0x88	; 136
    18d0:	d0 40       	sbci	r29, 0x00	; 0
    18d2:	ca 57       	subi	r28, 0x7A	; 122
    18d4:	df 4f       	sbci	r29, 0xFF	; 255
    18d6:	a8 81       	ld	r26, Y
    18d8:	b9 81       	ldd	r27, Y+1	; 0x01
    18da:	c6 58       	subi	r28, 0x86	; 134
    18dc:	d0 40       	sbci	r29, 0x00	; 0
    18de:	0c 90       	ld	r0, X
    18e0:	ca 57       	subi	r28, 0x7A	; 122
    18e2:	df 4f       	sbci	r29, 0xFF	; 255
    18e4:	e8 81       	ld	r30, Y
    18e6:	f9 81       	ldd	r31, Y+1	; 0x01
    18e8:	c6 58       	subi	r28, 0x86	; 134
    18ea:	d0 40       	sbci	r29, 0x00	; 0
    18ec:	31 96       	adiw	r30, 0x01	; 1
    18ee:	ca 57       	subi	r28, 0x7A	; 122
    18f0:	df 4f       	sbci	r29, 0xFF	; 255
    18f2:	f9 83       	std	Y+1, r31	; 0x01
    18f4:	e8 83       	st	Y, r30
    18f6:	c6 58       	subi	r28, 0x86	; 134
    18f8:	d0 40       	sbci	r29, 0x00	; 0
    18fa:	cc 57       	subi	r28, 0x7C	; 124
    18fc:	df 4f       	sbci	r29, 0xFF	; 255
    18fe:	a8 81       	ld	r26, Y
    1900:	b9 81       	ldd	r27, Y+1	; 0x01
    1902:	c4 58       	subi	r28, 0x84	; 132
    1904:	d0 40       	sbci	r29, 0x00	; 0
    1906:	0c 92       	st	X, r0
    1908:	cc 57       	subi	r28, 0x7C	; 124
    190a:	df 4f       	sbci	r29, 0xFF	; 255
    190c:	e8 81       	ld	r30, Y
    190e:	f9 81       	ldd	r31, Y+1	; 0x01
    1910:	c4 58       	subi	r28, 0x84	; 132
    1912:	d0 40       	sbci	r29, 0x00	; 0
    1914:	31 96       	adiw	r30, 0x01	; 1
    1916:	cc 57       	subi	r28, 0x7C	; 124
    1918:	df 4f       	sbci	r29, 0xFF	; 255
    191a:	f9 83       	std	Y+1, r31	; 0x01
    191c:	e8 83       	st	Y, r30
    191e:	c4 58       	subi	r28, 0x84	; 132
    1920:	d0 40       	sbci	r29, 0x00	; 0
    1922:	c8 57       	subi	r28, 0x78	; 120
    1924:	df 4f       	sbci	r29, 0xFF	; 255
    1926:	f8 81       	ld	r31, Y
    1928:	c8 58       	subi	r28, 0x88	; 136
    192a:	d0 40       	sbci	r29, 0x00	; 0
    192c:	f1 50       	subi	r31, 0x01	; 1
    192e:	c8 57       	subi	r28, 0x78	; 120
    1930:	df 4f       	sbci	r29, 0xFF	; 255
    1932:	f8 83       	st	Y, r31
    1934:	c8 58       	subi	r28, 0x88	; 136
    1936:	d0 40       	sbci	r29, 0x00	; 0
    1938:	c8 57       	subi	r28, 0x78	; 120
    193a:	df 4f       	sbci	r29, 0xFF	; 255
    193c:	88 81       	ld	r24, Y
    193e:	c8 58       	subi	r28, 0x88	; 136
    1940:	d0 40       	sbci	r29, 0x00	; 0
    1942:	88 23       	and	r24, r24
    1944:	31 f6       	brne	.-116    	; 0x18d2 <main+0x1c2>
	u8 customChar5[] = { 0x1F, 0x14,0x1C,0x18,0x10, 0x10, 0x10, 0x10};
    1946:	de 01       	movw	r26, r28
    1948:	dd 96       	adiw	r26, 0x3d	; 61
    194a:	c7 57       	subi	r28, 0x77	; 119
    194c:	df 4f       	sbci	r29, 0xFF	; 255
    194e:	b9 83       	std	Y+1, r27	; 0x01
    1950:	a8 83       	st	Y, r26
    1952:	c9 58       	subi	r28, 0x89	; 137
    1954:	d0 40       	sbci	r29, 0x00	; 0
    1956:	e6 ee       	ldi	r30, 0xE6	; 230
    1958:	f0 e0       	ldi	r31, 0x00	; 0
    195a:	c5 57       	subi	r28, 0x75	; 117
    195c:	df 4f       	sbci	r29, 0xFF	; 255
    195e:	f9 83       	std	Y+1, r31	; 0x01
    1960:	e8 83       	st	Y, r30
    1962:	cb 58       	subi	r28, 0x8B	; 139
    1964:	d0 40       	sbci	r29, 0x00	; 0
    1966:	f8 e0       	ldi	r31, 0x08	; 8
    1968:	c3 57       	subi	r28, 0x73	; 115
    196a:	df 4f       	sbci	r29, 0xFF	; 255
    196c:	f8 83       	st	Y, r31
    196e:	cd 58       	subi	r28, 0x8D	; 141
    1970:	d0 40       	sbci	r29, 0x00	; 0
    1972:	c5 57       	subi	r28, 0x75	; 117
    1974:	df 4f       	sbci	r29, 0xFF	; 255
    1976:	a8 81       	ld	r26, Y
    1978:	b9 81       	ldd	r27, Y+1	; 0x01
    197a:	cb 58       	subi	r28, 0x8B	; 139
    197c:	d0 40       	sbci	r29, 0x00	; 0
    197e:	0c 90       	ld	r0, X
    1980:	c5 57       	subi	r28, 0x75	; 117
    1982:	df 4f       	sbci	r29, 0xFF	; 255
    1984:	e8 81       	ld	r30, Y
    1986:	f9 81       	ldd	r31, Y+1	; 0x01
    1988:	cb 58       	subi	r28, 0x8B	; 139
    198a:	d0 40       	sbci	r29, 0x00	; 0
    198c:	31 96       	adiw	r30, 0x01	; 1
    198e:	c5 57       	subi	r28, 0x75	; 117
    1990:	df 4f       	sbci	r29, 0xFF	; 255
    1992:	f9 83       	std	Y+1, r31	; 0x01
    1994:	e8 83       	st	Y, r30
    1996:	cb 58       	subi	r28, 0x8B	; 139
    1998:	d0 40       	sbci	r29, 0x00	; 0
    199a:	c7 57       	subi	r28, 0x77	; 119
    199c:	df 4f       	sbci	r29, 0xFF	; 255
    199e:	a8 81       	ld	r26, Y
    19a0:	b9 81       	ldd	r27, Y+1	; 0x01
    19a2:	c9 58       	subi	r28, 0x89	; 137
    19a4:	d0 40       	sbci	r29, 0x00	; 0
    19a6:	0c 92       	st	X, r0
    19a8:	c7 57       	subi	r28, 0x77	; 119
    19aa:	df 4f       	sbci	r29, 0xFF	; 255
    19ac:	e8 81       	ld	r30, Y
    19ae:	f9 81       	ldd	r31, Y+1	; 0x01
    19b0:	c9 58       	subi	r28, 0x89	; 137
    19b2:	d0 40       	sbci	r29, 0x00	; 0
    19b4:	31 96       	adiw	r30, 0x01	; 1
    19b6:	c7 57       	subi	r28, 0x77	; 119
    19b8:	df 4f       	sbci	r29, 0xFF	; 255
    19ba:	f9 83       	std	Y+1, r31	; 0x01
    19bc:	e8 83       	st	Y, r30
    19be:	c9 58       	subi	r28, 0x89	; 137
    19c0:	d0 40       	sbci	r29, 0x00	; 0
    19c2:	c3 57       	subi	r28, 0x73	; 115
    19c4:	df 4f       	sbci	r29, 0xFF	; 255
    19c6:	f8 81       	ld	r31, Y
    19c8:	cd 58       	subi	r28, 0x8D	; 141
    19ca:	d0 40       	sbci	r29, 0x00	; 0
    19cc:	f1 50       	subi	r31, 0x01	; 1
    19ce:	c3 57       	subi	r28, 0x73	; 115
    19d0:	df 4f       	sbci	r29, 0xFF	; 255
    19d2:	f8 83       	st	Y, r31
    19d4:	cd 58       	subi	r28, 0x8D	; 141
    19d6:	d0 40       	sbci	r29, 0x00	; 0
    19d8:	c3 57       	subi	r28, 0x73	; 115
    19da:	df 4f       	sbci	r29, 0xFF	; 255
    19dc:	88 81       	ld	r24, Y
    19de:	cd 58       	subi	r28, 0x8D	; 141
    19e0:	d0 40       	sbci	r29, 0x00	; 0
    19e2:	88 23       	and	r24, r24
    19e4:	31 f6       	brne	.-116    	; 0x1972 <main+0x262>
	u8 customChar6[] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00};
    19e6:	ce 01       	movw	r24, r28
    19e8:	8b 5b       	subi	r24, 0xBB	; 187
    19ea:	9f 4f       	sbci	r25, 0xFF	; 255
    19ec:	28 e0       	ldi	r18, 0x08	; 8
    19ee:	fc 01       	movw	r30, r24
    19f0:	df 01       	movw	r26, r30
    19f2:	82 2f       	mov	r24, r18
    19f4:	1d 92       	st	X+, r1
    19f6:	8a 95       	dec	r24
    19f8:	e9 f7       	brne	.-6      	; 0x19f4 <main+0x2e4>
    19fa:	fe 01       	movw	r30, r28
    19fc:	eb 5b       	subi	r30, 0xBB	; 187
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	84 e0       	ldi	r24, 0x04	; 4
    1a02:	80 83       	st	Z, r24
	u8 customChar7[] = { 0x0E, 0x0E, 0x04, 0x0E, 0x15, 0x0E, 0x11, 0x00};
    1a04:	ce 01       	movw	r24, r28
    1a06:	83 5b       	subi	r24, 0xB3	; 179
    1a08:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0a:	c2 57       	subi	r28, 0x72	; 114
    1a0c:	df 4f       	sbci	r29, 0xFF	; 255
    1a0e:	99 83       	std	Y+1, r25	; 0x01
    1a10:	88 83       	st	Y, r24
    1a12:	ce 58       	subi	r28, 0x8E	; 142
    1a14:	d0 40       	sbci	r29, 0x00	; 0
    1a16:	ae ed       	ldi	r26, 0xDE	; 222
    1a18:	b0 e0       	ldi	r27, 0x00	; 0
    1a1a:	c0 57       	subi	r28, 0x70	; 112
    1a1c:	df 4f       	sbci	r29, 0xFF	; 255
    1a1e:	b9 83       	std	Y+1, r27	; 0x01
    1a20:	a8 83       	st	Y, r26
    1a22:	c0 59       	subi	r28, 0x90	; 144
    1a24:	d0 40       	sbci	r29, 0x00	; 0
    1a26:	b8 e0       	ldi	r27, 0x08	; 8
    1a28:	ce 56       	subi	r28, 0x6E	; 110
    1a2a:	df 4f       	sbci	r29, 0xFF	; 255
    1a2c:	b8 83       	st	Y, r27
    1a2e:	c2 59       	subi	r28, 0x92	; 146
    1a30:	d0 40       	sbci	r29, 0x00	; 0
    1a32:	c0 57       	subi	r28, 0x70	; 112
    1a34:	df 4f       	sbci	r29, 0xFF	; 255
    1a36:	e8 81       	ld	r30, Y
    1a38:	f9 81       	ldd	r31, Y+1	; 0x01
    1a3a:	c0 59       	subi	r28, 0x90	; 144
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	00 80       	ld	r0, Z
    1a40:	c0 57       	subi	r28, 0x70	; 112
    1a42:	df 4f       	sbci	r29, 0xFF	; 255
    1a44:	88 81       	ld	r24, Y
    1a46:	99 81       	ldd	r25, Y+1	; 0x01
    1a48:	c0 59       	subi	r28, 0x90	; 144
    1a4a:	d0 40       	sbci	r29, 0x00	; 0
    1a4c:	01 96       	adiw	r24, 0x01	; 1
    1a4e:	c0 57       	subi	r28, 0x70	; 112
    1a50:	df 4f       	sbci	r29, 0xFF	; 255
    1a52:	99 83       	std	Y+1, r25	; 0x01
    1a54:	88 83       	st	Y, r24
    1a56:	c0 59       	subi	r28, 0x90	; 144
    1a58:	d0 40       	sbci	r29, 0x00	; 0
    1a5a:	c2 57       	subi	r28, 0x72	; 114
    1a5c:	df 4f       	sbci	r29, 0xFF	; 255
    1a5e:	a8 81       	ld	r26, Y
    1a60:	b9 81       	ldd	r27, Y+1	; 0x01
    1a62:	ce 58       	subi	r28, 0x8E	; 142
    1a64:	d0 40       	sbci	r29, 0x00	; 0
    1a66:	0c 92       	st	X, r0
    1a68:	c2 57       	subi	r28, 0x72	; 114
    1a6a:	df 4f       	sbci	r29, 0xFF	; 255
    1a6c:	e8 81       	ld	r30, Y
    1a6e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a70:	ce 58       	subi	r28, 0x8E	; 142
    1a72:	d0 40       	sbci	r29, 0x00	; 0
    1a74:	31 96       	adiw	r30, 0x01	; 1
    1a76:	c2 57       	subi	r28, 0x72	; 114
    1a78:	df 4f       	sbci	r29, 0xFF	; 255
    1a7a:	f9 83       	std	Y+1, r31	; 0x01
    1a7c:	e8 83       	st	Y, r30
    1a7e:	ce 58       	subi	r28, 0x8E	; 142
    1a80:	d0 40       	sbci	r29, 0x00	; 0
    1a82:	ce 56       	subi	r28, 0x6E	; 110
    1a84:	df 4f       	sbci	r29, 0xFF	; 255
    1a86:	f8 81       	ld	r31, Y
    1a88:	c2 59       	subi	r28, 0x92	; 146
    1a8a:	d0 40       	sbci	r29, 0x00	; 0
    1a8c:	f1 50       	subi	r31, 0x01	; 1
    1a8e:	ce 56       	subi	r28, 0x6E	; 110
    1a90:	df 4f       	sbci	r29, 0xFF	; 255
    1a92:	f8 83       	st	Y, r31
    1a94:	c2 59       	subi	r28, 0x92	; 146
    1a96:	d0 40       	sbci	r29, 0x00	; 0
    1a98:	ce 56       	subi	r28, 0x6E	; 110
    1a9a:	df 4f       	sbci	r29, 0xFF	; 255
    1a9c:	88 81       	ld	r24, Y
    1a9e:	c2 59       	subi	r28, 0x92	; 146
    1aa0:	d0 40       	sbci	r29, 0x00	; 0
    1aa2:	88 23       	and	r24, r24
    1aa4:	31 f6       	brne	.-116    	; 0x1a32 <main+0x322>
			  0x00,
			  0x10,
			  0x08,
			  0x07,
			  0x08,
			  0x10};
    1aa6:	ce 01       	movw	r24, r28
    1aa8:	8b 5a       	subi	r24, 0xAB	; 171
    1aaa:	9f 4f       	sbci	r25, 0xFF	; 255
    1aac:	cd 56       	subi	r28, 0x6D	; 109
    1aae:	df 4f       	sbci	r29, 0xFF	; 255
    1ab0:	99 83       	std	Y+1, r25	; 0x01
    1ab2:	88 83       	st	Y, r24
    1ab4:	c3 59       	subi	r28, 0x93	; 147
    1ab6:	d0 40       	sbci	r29, 0x00	; 0
    1ab8:	a6 ed       	ldi	r26, 0xD6	; 214
    1aba:	b0 e0       	ldi	r27, 0x00	; 0
    1abc:	cb 56       	subi	r28, 0x6B	; 107
    1abe:	df 4f       	sbci	r29, 0xFF	; 255
    1ac0:	b9 83       	std	Y+1, r27	; 0x01
    1ac2:	a8 83       	st	Y, r26
    1ac4:	c5 59       	subi	r28, 0x95	; 149
    1ac6:	d0 40       	sbci	r29, 0x00	; 0
    1ac8:	b8 e0       	ldi	r27, 0x08	; 8
    1aca:	c9 56       	subi	r28, 0x69	; 105
    1acc:	df 4f       	sbci	r29, 0xFF	; 255
    1ace:	b8 83       	st	Y, r27
    1ad0:	c7 59       	subi	r28, 0x97	; 151
    1ad2:	d0 40       	sbci	r29, 0x00	; 0
    1ad4:	cb 56       	subi	r28, 0x6B	; 107
    1ad6:	df 4f       	sbci	r29, 0xFF	; 255
    1ad8:	e8 81       	ld	r30, Y
    1ada:	f9 81       	ldd	r31, Y+1	; 0x01
    1adc:	c5 59       	subi	r28, 0x95	; 149
    1ade:	d0 40       	sbci	r29, 0x00	; 0
    1ae0:	00 80       	ld	r0, Z
    1ae2:	cb 56       	subi	r28, 0x6B	; 107
    1ae4:	df 4f       	sbci	r29, 0xFF	; 255
    1ae6:	88 81       	ld	r24, Y
    1ae8:	99 81       	ldd	r25, Y+1	; 0x01
    1aea:	c5 59       	subi	r28, 0x95	; 149
    1aec:	d0 40       	sbci	r29, 0x00	; 0
    1aee:	01 96       	adiw	r24, 0x01	; 1
    1af0:	cb 56       	subi	r28, 0x6B	; 107
    1af2:	df 4f       	sbci	r29, 0xFF	; 255
    1af4:	99 83       	std	Y+1, r25	; 0x01
    1af6:	88 83       	st	Y, r24
    1af8:	c5 59       	subi	r28, 0x95	; 149
    1afa:	d0 40       	sbci	r29, 0x00	; 0
    1afc:	cd 56       	subi	r28, 0x6D	; 109
    1afe:	df 4f       	sbci	r29, 0xFF	; 255
    1b00:	a8 81       	ld	r26, Y
    1b02:	b9 81       	ldd	r27, Y+1	; 0x01
    1b04:	c3 59       	subi	r28, 0x93	; 147
    1b06:	d0 40       	sbci	r29, 0x00	; 0
    1b08:	0c 92       	st	X, r0
    1b0a:	cd 56       	subi	r28, 0x6D	; 109
    1b0c:	df 4f       	sbci	r29, 0xFF	; 255
    1b0e:	e8 81       	ld	r30, Y
    1b10:	f9 81       	ldd	r31, Y+1	; 0x01
    1b12:	c3 59       	subi	r28, 0x93	; 147
    1b14:	d0 40       	sbci	r29, 0x00	; 0
    1b16:	31 96       	adiw	r30, 0x01	; 1
    1b18:	cd 56       	subi	r28, 0x6D	; 109
    1b1a:	df 4f       	sbci	r29, 0xFF	; 255
    1b1c:	f9 83       	std	Y+1, r31	; 0x01
    1b1e:	e8 83       	st	Y, r30
    1b20:	c3 59       	subi	r28, 0x93	; 147
    1b22:	d0 40       	sbci	r29, 0x00	; 0
    1b24:	c9 56       	subi	r28, 0x69	; 105
    1b26:	df 4f       	sbci	r29, 0xFF	; 255
    1b28:	f8 81       	ld	r31, Y
    1b2a:	c7 59       	subi	r28, 0x97	; 151
    1b2c:	d0 40       	sbci	r29, 0x00	; 0
    1b2e:	f1 50       	subi	r31, 0x01	; 1
    1b30:	c9 56       	subi	r28, 0x69	; 105
    1b32:	df 4f       	sbci	r29, 0xFF	; 255
    1b34:	f8 83       	st	Y, r31
    1b36:	c7 59       	subi	r28, 0x97	; 151
    1b38:	d0 40       	sbci	r29, 0x00	; 0
    1b3a:	c9 56       	subi	r28, 0x69	; 105
    1b3c:	df 4f       	sbci	r29, 0xFF	; 255
    1b3e:	88 81       	ld	r24, Y
    1b40:	c7 59       	subi	r28, 0x97	; 151
    1b42:	d0 40       	sbci	r29, 0x00	; 0
    1b44:	88 23       	and	r24, r24
    1b46:	31 f6       	brne	.-116    	; 0x1ad4 <main+0x3c4>
			  0x00,
			  0x07,
			  0x07,
			  0x1F,
			  0x00,
			  0x00};
    1b48:	ce 01       	movw	r24, r28
    1b4a:	83 5a       	subi	r24, 0xA3	; 163
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	c8 56       	subi	r28, 0x68	; 104
    1b50:	df 4f       	sbci	r29, 0xFF	; 255
    1b52:	99 83       	std	Y+1, r25	; 0x01
    1b54:	88 83       	st	Y, r24
    1b56:	c8 59       	subi	r28, 0x98	; 152
    1b58:	d0 40       	sbci	r29, 0x00	; 0
    1b5a:	ae ec       	ldi	r26, 0xCE	; 206
    1b5c:	b0 e0       	ldi	r27, 0x00	; 0
    1b5e:	c6 56       	subi	r28, 0x66	; 102
    1b60:	df 4f       	sbci	r29, 0xFF	; 255
    1b62:	b9 83       	std	Y+1, r27	; 0x01
    1b64:	a8 83       	st	Y, r26
    1b66:	ca 59       	subi	r28, 0x9A	; 154
    1b68:	d0 40       	sbci	r29, 0x00	; 0
    1b6a:	b8 e0       	ldi	r27, 0x08	; 8
    1b6c:	c4 56       	subi	r28, 0x64	; 100
    1b6e:	df 4f       	sbci	r29, 0xFF	; 255
    1b70:	b8 83       	st	Y, r27
    1b72:	cc 59       	subi	r28, 0x9C	; 156
    1b74:	d0 40       	sbci	r29, 0x00	; 0
    1b76:	c6 56       	subi	r28, 0x66	; 102
    1b78:	df 4f       	sbci	r29, 0xFF	; 255
    1b7a:	e8 81       	ld	r30, Y
    1b7c:	f9 81       	ldd	r31, Y+1	; 0x01
    1b7e:	ca 59       	subi	r28, 0x9A	; 154
    1b80:	d0 40       	sbci	r29, 0x00	; 0
    1b82:	00 80       	ld	r0, Z
    1b84:	c6 56       	subi	r28, 0x66	; 102
    1b86:	df 4f       	sbci	r29, 0xFF	; 255
    1b88:	88 81       	ld	r24, Y
    1b8a:	99 81       	ldd	r25, Y+1	; 0x01
    1b8c:	ca 59       	subi	r28, 0x9A	; 154
    1b8e:	d0 40       	sbci	r29, 0x00	; 0
    1b90:	01 96       	adiw	r24, 0x01	; 1
    1b92:	c6 56       	subi	r28, 0x66	; 102
    1b94:	df 4f       	sbci	r29, 0xFF	; 255
    1b96:	99 83       	std	Y+1, r25	; 0x01
    1b98:	88 83       	st	Y, r24
    1b9a:	ca 59       	subi	r28, 0x9A	; 154
    1b9c:	d0 40       	sbci	r29, 0x00	; 0
    1b9e:	c8 56       	subi	r28, 0x68	; 104
    1ba0:	df 4f       	sbci	r29, 0xFF	; 255
    1ba2:	a8 81       	ld	r26, Y
    1ba4:	b9 81       	ldd	r27, Y+1	; 0x01
    1ba6:	c8 59       	subi	r28, 0x98	; 152
    1ba8:	d0 40       	sbci	r29, 0x00	; 0
    1baa:	0c 92       	st	X, r0
    1bac:	c8 56       	subi	r28, 0x68	; 104
    1bae:	df 4f       	sbci	r29, 0xFF	; 255
    1bb0:	e8 81       	ld	r30, Y
    1bb2:	f9 81       	ldd	r31, Y+1	; 0x01
    1bb4:	c8 59       	subi	r28, 0x98	; 152
    1bb6:	d0 40       	sbci	r29, 0x00	; 0
    1bb8:	31 96       	adiw	r30, 0x01	; 1
    1bba:	c8 56       	subi	r28, 0x68	; 104
    1bbc:	df 4f       	sbci	r29, 0xFF	; 255
    1bbe:	f9 83       	std	Y+1, r31	; 0x01
    1bc0:	e8 83       	st	Y, r30
    1bc2:	c8 59       	subi	r28, 0x98	; 152
    1bc4:	d0 40       	sbci	r29, 0x00	; 0
    1bc6:	c4 56       	subi	r28, 0x64	; 100
    1bc8:	df 4f       	sbci	r29, 0xFF	; 255
    1bca:	f8 81       	ld	r31, Y
    1bcc:	cc 59       	subi	r28, 0x9C	; 156
    1bce:	d0 40       	sbci	r29, 0x00	; 0
    1bd0:	f1 50       	subi	r31, 0x01	; 1
    1bd2:	c4 56       	subi	r28, 0x64	; 100
    1bd4:	df 4f       	sbci	r29, 0xFF	; 255
    1bd6:	f8 83       	st	Y, r31
    1bd8:	cc 59       	subi	r28, 0x9C	; 156
    1bda:	d0 40       	sbci	r29, 0x00	; 0
    1bdc:	c4 56       	subi	r28, 0x64	; 100
    1bde:	df 4f       	sbci	r29, 0xFF	; 255
    1be0:	88 81       	ld	r24, Y
    1be2:	cc 59       	subi	r28, 0x9C	; 156
    1be4:	d0 40       	sbci	r29, 0x00	; 0
    1be6:	88 23       	and	r24, r24
    1be8:	31 f6       	brne	.-116    	; 0x1b76 <main+0x466>
	u8 customChar10[] = { 0x00, 0x0A, 0x00, 0x0E,0x11,0x11, 0x00, 0x00};
    1bea:	ce 01       	movw	r24, r28
    1bec:	8b 59       	subi	r24, 0x9B	; 155
    1bee:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf0:	c3 56       	subi	r28, 0x63	; 99
    1bf2:	df 4f       	sbci	r29, 0xFF	; 255
    1bf4:	99 83       	std	Y+1, r25	; 0x01
    1bf6:	88 83       	st	Y, r24
    1bf8:	cd 59       	subi	r28, 0x9D	; 157
    1bfa:	d0 40       	sbci	r29, 0x00	; 0
    1bfc:	a6 ec       	ldi	r26, 0xC6	; 198
    1bfe:	b0 e0       	ldi	r27, 0x00	; 0
    1c00:	c1 56       	subi	r28, 0x61	; 97
    1c02:	df 4f       	sbci	r29, 0xFF	; 255
    1c04:	b9 83       	std	Y+1, r27	; 0x01
    1c06:	a8 83       	st	Y, r26
    1c08:	cf 59       	subi	r28, 0x9F	; 159
    1c0a:	d0 40       	sbci	r29, 0x00	; 0
    1c0c:	b8 e0       	ldi	r27, 0x08	; 8
    1c0e:	cf 55       	subi	r28, 0x5F	; 95
    1c10:	df 4f       	sbci	r29, 0xFF	; 255
    1c12:	b8 83       	st	Y, r27
    1c14:	c1 5a       	subi	r28, 0xA1	; 161
    1c16:	d0 40       	sbci	r29, 0x00	; 0
    1c18:	c1 56       	subi	r28, 0x61	; 97
    1c1a:	df 4f       	sbci	r29, 0xFF	; 255
    1c1c:	e8 81       	ld	r30, Y
    1c1e:	f9 81       	ldd	r31, Y+1	; 0x01
    1c20:	cf 59       	subi	r28, 0x9F	; 159
    1c22:	d0 40       	sbci	r29, 0x00	; 0
    1c24:	00 80       	ld	r0, Z
    1c26:	c1 56       	subi	r28, 0x61	; 97
    1c28:	df 4f       	sbci	r29, 0xFF	; 255
    1c2a:	88 81       	ld	r24, Y
    1c2c:	99 81       	ldd	r25, Y+1	; 0x01
    1c2e:	cf 59       	subi	r28, 0x9F	; 159
    1c30:	d0 40       	sbci	r29, 0x00	; 0
    1c32:	01 96       	adiw	r24, 0x01	; 1
    1c34:	c1 56       	subi	r28, 0x61	; 97
    1c36:	df 4f       	sbci	r29, 0xFF	; 255
    1c38:	99 83       	std	Y+1, r25	; 0x01
    1c3a:	88 83       	st	Y, r24
    1c3c:	cf 59       	subi	r28, 0x9F	; 159
    1c3e:	d0 40       	sbci	r29, 0x00	; 0
    1c40:	c3 56       	subi	r28, 0x63	; 99
    1c42:	df 4f       	sbci	r29, 0xFF	; 255
    1c44:	a8 81       	ld	r26, Y
    1c46:	b9 81       	ldd	r27, Y+1	; 0x01
    1c48:	cd 59       	subi	r28, 0x9D	; 157
    1c4a:	d0 40       	sbci	r29, 0x00	; 0
    1c4c:	0c 92       	st	X, r0
    1c4e:	c3 56       	subi	r28, 0x63	; 99
    1c50:	df 4f       	sbci	r29, 0xFF	; 255
    1c52:	e8 81       	ld	r30, Y
    1c54:	f9 81       	ldd	r31, Y+1	; 0x01
    1c56:	cd 59       	subi	r28, 0x9D	; 157
    1c58:	d0 40       	sbci	r29, 0x00	; 0
    1c5a:	31 96       	adiw	r30, 0x01	; 1
    1c5c:	c3 56       	subi	r28, 0x63	; 99
    1c5e:	df 4f       	sbci	r29, 0xFF	; 255
    1c60:	f9 83       	std	Y+1, r31	; 0x01
    1c62:	e8 83       	st	Y, r30
    1c64:	cd 59       	subi	r28, 0x9D	; 157
    1c66:	d0 40       	sbci	r29, 0x00	; 0
    1c68:	cf 55       	subi	r28, 0x5F	; 95
    1c6a:	df 4f       	sbci	r29, 0xFF	; 255
    1c6c:	f8 81       	ld	r31, Y
    1c6e:	c1 5a       	subi	r28, 0xA1	; 161
    1c70:	d0 40       	sbci	r29, 0x00	; 0
    1c72:	f1 50       	subi	r31, 0x01	; 1
    1c74:	cf 55       	subi	r28, 0x5F	; 95
    1c76:	df 4f       	sbci	r29, 0xFF	; 255
    1c78:	f8 83       	st	Y, r31
    1c7a:	c1 5a       	subi	r28, 0xA1	; 161
    1c7c:	d0 40       	sbci	r29, 0x00	; 0
    1c7e:	cf 55       	subi	r28, 0x5F	; 95
    1c80:	df 4f       	sbci	r29, 0xFF	; 255
    1c82:	88 81       	ld	r24, Y
    1c84:	c1 5a       	subi	r28, 0xA1	; 161
    1c86:	d0 40       	sbci	r29, 0x00	; 0
    1c88:	88 23       	and	r24, r24
    1c8a:	31 f6       	brne	.-116    	; 0x1c18 <main+0x508>
	u8 customChar11[] = {0x0A, 0x00, 0x11, 0x11, 0x0E, 0x00,  0x00,0x00};
    1c8c:	ce 01       	movw	r24, r28
    1c8e:	83 59       	subi	r24, 0x93	; 147
    1c90:	9f 4f       	sbci	r25, 0xFF	; 255
    1c92:	ce 55       	subi	r28, 0x5E	; 94
    1c94:	df 4f       	sbci	r29, 0xFF	; 255
    1c96:	99 83       	std	Y+1, r25	; 0x01
    1c98:	88 83       	st	Y, r24
    1c9a:	c2 5a       	subi	r28, 0xA2	; 162
    1c9c:	d0 40       	sbci	r29, 0x00	; 0
    1c9e:	ae eb       	ldi	r26, 0xBE	; 190
    1ca0:	b0 e0       	ldi	r27, 0x00	; 0
    1ca2:	cc 55       	subi	r28, 0x5C	; 92
    1ca4:	df 4f       	sbci	r29, 0xFF	; 255
    1ca6:	b9 83       	std	Y+1, r27	; 0x01
    1ca8:	a8 83       	st	Y, r26
    1caa:	c4 5a       	subi	r28, 0xA4	; 164
    1cac:	d0 40       	sbci	r29, 0x00	; 0
    1cae:	b8 e0       	ldi	r27, 0x08	; 8
    1cb0:	ca 55       	subi	r28, 0x5A	; 90
    1cb2:	df 4f       	sbci	r29, 0xFF	; 255
    1cb4:	b8 83       	st	Y, r27
    1cb6:	c6 5a       	subi	r28, 0xA6	; 166
    1cb8:	d0 40       	sbci	r29, 0x00	; 0
    1cba:	cc 55       	subi	r28, 0x5C	; 92
    1cbc:	df 4f       	sbci	r29, 0xFF	; 255
    1cbe:	e8 81       	ld	r30, Y
    1cc0:	f9 81       	ldd	r31, Y+1	; 0x01
    1cc2:	c4 5a       	subi	r28, 0xA4	; 164
    1cc4:	d0 40       	sbci	r29, 0x00	; 0
    1cc6:	00 80       	ld	r0, Z
    1cc8:	cc 55       	subi	r28, 0x5C	; 92
    1cca:	df 4f       	sbci	r29, 0xFF	; 255
    1ccc:	88 81       	ld	r24, Y
    1cce:	99 81       	ldd	r25, Y+1	; 0x01
    1cd0:	c4 5a       	subi	r28, 0xA4	; 164
    1cd2:	d0 40       	sbci	r29, 0x00	; 0
    1cd4:	01 96       	adiw	r24, 0x01	; 1
    1cd6:	cc 55       	subi	r28, 0x5C	; 92
    1cd8:	df 4f       	sbci	r29, 0xFF	; 255
    1cda:	99 83       	std	Y+1, r25	; 0x01
    1cdc:	88 83       	st	Y, r24
    1cde:	c4 5a       	subi	r28, 0xA4	; 164
    1ce0:	d0 40       	sbci	r29, 0x00	; 0
    1ce2:	ce 55       	subi	r28, 0x5E	; 94
    1ce4:	df 4f       	sbci	r29, 0xFF	; 255
    1ce6:	a8 81       	ld	r26, Y
    1ce8:	b9 81       	ldd	r27, Y+1	; 0x01
    1cea:	c2 5a       	subi	r28, 0xA2	; 162
    1cec:	d0 40       	sbci	r29, 0x00	; 0
    1cee:	0c 92       	st	X, r0
    1cf0:	ce 55       	subi	r28, 0x5E	; 94
    1cf2:	df 4f       	sbci	r29, 0xFF	; 255
    1cf4:	e8 81       	ld	r30, Y
    1cf6:	f9 81       	ldd	r31, Y+1	; 0x01
    1cf8:	c2 5a       	subi	r28, 0xA2	; 162
    1cfa:	d0 40       	sbci	r29, 0x00	; 0
    1cfc:	31 96       	adiw	r30, 0x01	; 1
    1cfe:	ce 55       	subi	r28, 0x5E	; 94
    1d00:	df 4f       	sbci	r29, 0xFF	; 255
    1d02:	f9 83       	std	Y+1, r31	; 0x01
    1d04:	e8 83       	st	Y, r30
    1d06:	c2 5a       	subi	r28, 0xA2	; 162
    1d08:	d0 40       	sbci	r29, 0x00	; 0
    1d0a:	ca 55       	subi	r28, 0x5A	; 90
    1d0c:	df 4f       	sbci	r29, 0xFF	; 255
    1d0e:	f8 81       	ld	r31, Y
    1d10:	c6 5a       	subi	r28, 0xA6	; 166
    1d12:	d0 40       	sbci	r29, 0x00	; 0
    1d14:	f1 50       	subi	r31, 0x01	; 1
    1d16:	ca 55       	subi	r28, 0x5A	; 90
    1d18:	df 4f       	sbci	r29, 0xFF	; 255
    1d1a:	f8 83       	st	Y, r31
    1d1c:	c6 5a       	subi	r28, 0xA6	; 166
    1d1e:	d0 40       	sbci	r29, 0x00	; 0
    1d20:	ca 55       	subi	r28, 0x5A	; 90
    1d22:	df 4f       	sbci	r29, 0xFF	; 255
    1d24:	88 81       	ld	r24, Y
    1d26:	c6 5a       	subi	r28, 0xA6	; 166
    1d28:	d0 40       	sbci	r29, 0x00	; 0
    1d2a:	88 23       	and	r24, r24
    1d2c:	31 f6       	brne	.-116    	; 0x1cba <main+0x5aa>
	LCD_voidInit();
    1d2e:	0e 94 9e 08 	call	0x113c	; 0x113c <LCD_voidInit>

	while(1)
	{
		LCD_void_SendString("My Name is ");
    1d32:	80 e6       	ldi	r24, 0x60	; 96
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidGoToXY(1,3);
    1d3a:	81 e0       	ldi	r24, 0x01	; 1
    1d3c:	63 e0       	ldi	r22, 0x03	; 3
    1d3e:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
		LCD_void_SendString("Z3bola");
    1d42:	8c e6       	ldi	r24, 0x6C	; 108
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidSendCustomCharacter(customChar7,3, 0, 14);
    1d4a:	ce 01       	movw	r24, r28
    1d4c:	83 5b       	subi	r24, 0xB3	; 179
    1d4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d50:	63 e0       	ldi	r22, 0x03	; 3
    1d52:	40 e0       	ldi	r20, 0x00	; 0
    1d54:	2e e0       	ldi	r18, 0x0E	; 14
    1d56:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar2,1, 0, 14);
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	85 96       	adiw	r24, 0x25	; 37
    1d5e:	61 e0       	ldi	r22, 0x01	; 1
    1d60:	40 e0       	ldi	r20, 0x00	; 0
    1d62:	2e e0       	ldi	r18, 0x0E	; 14
    1d64:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar7,3, 0, 14);
    1d68:	ce 01       	movw	r24, r28
    1d6a:	83 5b       	subi	r24, 0xB3	; 179
    1d6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d6e:	63 e0       	ldi	r22, 0x03	; 3
    1d70:	40 e0       	ldi	r20, 0x00	; 0
    1d72:	2e e0       	ldi	r18, 0x0E	; 14
    1d74:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar2,1, 0, 14);
    1d78:	ce 01       	movw	r24, r28
    1d7a:	85 96       	adiw	r24, 0x25	; 37
    1d7c:	61 e0       	ldi	r22, 0x01	; 1
    1d7e:	40 e0       	ldi	r20, 0x00	; 0
    1d80:	2e e0       	ldi	r18, 0x0E	; 14
    1d82:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar7,3, 0, 14);
    1d86:	ce 01       	movw	r24, r28
    1d88:	83 5b       	subi	r24, 0xB3	; 179
    1d8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d8c:	63 e0       	ldi	r22, 0x03	; 3
    1d8e:	40 e0       	ldi	r20, 0x00	; 0
    1d90:	2e e0       	ldi	r18, 0x0E	; 14
    1d92:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar2,1, 0, 14);
    1d96:	ce 01       	movw	r24, r28
    1d98:	85 96       	adiw	r24, 0x25	; 37
    1d9a:	61 e0       	ldi	r22, 0x01	; 1
    1d9c:	40 e0       	ldi	r20, 0x00	; 0
    1d9e:	2e e0       	ldi	r18, 0x0E	; 14
    1da0:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_ClearDisplay();
    1da4:	0e 94 85 0a 	call	0x150a	; 0x150a <LCD_ClearDisplay>

		LCD_void_SendString("I Can Play");
    1da8:	83 e7       	ldi	r24, 0x73	; 115
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidGoToXY(1,3);
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	63 e0       	ldi	r22, 0x03	; 3
    1db4:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
		LCD_void_SendString("Football");
    1db8:	8e e7       	ldi	r24, 0x7E	; 126
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidSendCustomCharacter(customChar3,1, 0, 15);
    1dc0:	ce 01       	movw	r24, r28
    1dc2:	8d 96       	adiw	r24, 0x2d	; 45
    1dc4:	61 e0       	ldi	r22, 0x01	; 1
    1dc6:	40 e0       	ldi	r20, 0x00	; 0
    1dc8:	2f e0       	ldi	r18, 0x0F	; 15
    1dca:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar4,1, 0, 15);
    1dce:	ce 01       	movw	r24, r28
    1dd0:	c5 96       	adiw	r24, 0x35	; 53
    1dd2:	61 e0       	ldi	r22, 0x01	; 1
    1dd4:	40 e0       	ldi	r20, 0x00	; 0
    1dd6:	2f e0       	ldi	r18, 0x0F	; 15
    1dd8:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar3,1, 0, 15);
    1ddc:	ce 01       	movw	r24, r28
    1dde:	8d 96       	adiw	r24, 0x2d	; 45
    1de0:	61 e0       	ldi	r22, 0x01	; 1
    1de2:	40 e0       	ldi	r20, 0x00	; 0
    1de4:	2f e0       	ldi	r18, 0x0F	; 15
    1de6:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar4,1, 0, 15);
    1dea:	ce 01       	movw	r24, r28
    1dec:	c5 96       	adiw	r24, 0x35	; 53
    1dee:	61 e0       	ldi	r22, 0x01	; 1
    1df0:	40 e0       	ldi	r20, 0x00	; 0
    1df2:	2f e0       	ldi	r18, 0x0F	; 15
    1df4:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar3,1, 0, 15);
    1df8:	ce 01       	movw	r24, r28
    1dfa:	8d 96       	adiw	r24, 0x2d	; 45
    1dfc:	61 e0       	ldi	r22, 0x01	; 1
    1dfe:	40 e0       	ldi	r20, 0x00	; 0
    1e00:	2f e0       	ldi	r18, 0x0F	; 15
    1e02:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar4,1, 0, 15);
    1e06:	ce 01       	movw	r24, r28
    1e08:	c5 96       	adiw	r24, 0x35	; 53
    1e0a:	61 e0       	ldi	r22, 0x01	; 1
    1e0c:	40 e0       	ldi	r20, 0x00	; 0
    1e0e:	2f e0       	ldi	r18, 0x0F	; 15
    1e10:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_ClearDisplay();
    1e14:	0e 94 85 0a 	call	0x150a	; 0x150a <LCD_ClearDisplay>

		LCD_void_SendString("Let's Play A");
    1e18:	87 e8       	ldi	r24, 0x87	; 135
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidGoToXY(1,2);
    1e20:	81 e0       	ldi	r24, 0x01	; 1
    1e22:	62 e0       	ldi	r22, 0x02	; 2
    1e24:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
		LCD_void_SendString("Game");
    1e28:	84 e9       	ldi	r24, 0x94	; 148
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidSendCustomCharacter(customChar11,1, 1, 7);
    1e30:	ce 01       	movw	r24, r28
    1e32:	83 59       	subi	r24, 0x93	; 147
    1e34:	9f 4f       	sbci	r25, 0xFF	; 255
    1e36:	61 e0       	ldi	r22, 0x01	; 1
    1e38:	41 e0       	ldi	r20, 0x01	; 1
    1e3a:	27 e0       	ldi	r18, 0x07	; 7
    1e3c:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
    1e40:	80 e0       	ldi	r24, 0x00	; 0
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	a8 e4       	ldi	r26, 0x48	; 72
    1e46:	b3 e4       	ldi	r27, 0x43	; 67
    1e48:	89 8f       	std	Y+25, r24	; 0x19
    1e4a:	9a 8f       	std	Y+26, r25	; 0x1a
    1e4c:	ab 8f       	std	Y+27, r26	; 0x1b
    1e4e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e50:	69 8d       	ldd	r22, Y+25	; 0x19
    1e52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	30 e0       	ldi	r19, 0x00	; 0
    1e5c:	4a ef       	ldi	r20, 0xFA	; 250
    1e5e:	54 e4       	ldi	r21, 0x44	; 68
    1e60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e64:	dc 01       	movw	r26, r24
    1e66:	cb 01       	movw	r24, r22
    1e68:	8d 8b       	std	Y+21, r24	; 0x15
    1e6a:	9e 8b       	std	Y+22, r25	; 0x16
    1e6c:	af 8b       	std	Y+23, r26	; 0x17
    1e6e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e70:	6d 89       	ldd	r22, Y+21	; 0x15
    1e72:	7e 89       	ldd	r23, Y+22	; 0x16
    1e74:	8f 89       	ldd	r24, Y+23	; 0x17
    1e76:	98 8d       	ldd	r25, Y+24	; 0x18
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	40 e8       	ldi	r20, 0x80	; 128
    1e7e:	5f e3       	ldi	r21, 0x3F	; 63
    1e80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e84:	88 23       	and	r24, r24
    1e86:	2c f4       	brge	.+10     	; 0x1e92 <main+0x782>
		__ticks = 1;
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	9c 8b       	std	Y+20, r25	; 0x14
    1e8e:	8b 8b       	std	Y+19, r24	; 0x13
    1e90:	3f c0       	rjmp	.+126    	; 0x1f10 <main+0x800>
	else if (__tmp > 65535)
    1e92:	6d 89       	ldd	r22, Y+21	; 0x15
    1e94:	7e 89       	ldd	r23, Y+22	; 0x16
    1e96:	8f 89       	ldd	r24, Y+23	; 0x17
    1e98:	98 8d       	ldd	r25, Y+24	; 0x18
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	3f ef       	ldi	r19, 0xFF	; 255
    1e9e:	4f e7       	ldi	r20, 0x7F	; 127
    1ea0:	57 e4       	ldi	r21, 0x47	; 71
    1ea2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ea6:	18 16       	cp	r1, r24
    1ea8:	4c f5       	brge	.+82     	; 0x1efc <main+0x7ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eaa:	69 8d       	ldd	r22, Y+25	; 0x19
    1eac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1eae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1eb0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	40 e2       	ldi	r20, 0x20	; 32
    1eb8:	51 e4       	ldi	r21, 0x41	; 65
    1eba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ebe:	dc 01       	movw	r26, r24
    1ec0:	cb 01       	movw	r24, r22
    1ec2:	bc 01       	movw	r22, r24
    1ec4:	cd 01       	movw	r24, r26
    1ec6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eca:	dc 01       	movw	r26, r24
    1ecc:	cb 01       	movw	r24, r22
    1ece:	9c 8b       	std	Y+20, r25	; 0x14
    1ed0:	8b 8b       	std	Y+19, r24	; 0x13
    1ed2:	0f c0       	rjmp	.+30     	; 0x1ef2 <main+0x7e2>
    1ed4:	88 ec       	ldi	r24, 0xC8	; 200
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	9a 8b       	std	Y+18, r25	; 0x12
    1eda:	89 8b       	std	Y+17, r24	; 0x11
    1edc:	89 89       	ldd	r24, Y+17	; 0x11
    1ede:	9a 89       	ldd	r25, Y+18	; 0x12
    1ee0:	01 97       	sbiw	r24, 0x01	; 1
    1ee2:	f1 f7       	brne	.-4      	; 0x1ee0 <main+0x7d0>
    1ee4:	9a 8b       	std	Y+18, r25	; 0x12
    1ee6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ee8:	8b 89       	ldd	r24, Y+19	; 0x13
    1eea:	9c 89       	ldd	r25, Y+20	; 0x14
    1eec:	01 97       	sbiw	r24, 0x01	; 1
    1eee:	9c 8b       	std	Y+20, r25	; 0x14
    1ef0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ef2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ef4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ef6:	00 97       	sbiw	r24, 0x00	; 0
    1ef8:	69 f7       	brne	.-38     	; 0x1ed4 <main+0x7c4>
    1efa:	14 c0       	rjmp	.+40     	; 0x1f24 <main+0x814>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1efc:	6d 89       	ldd	r22, Y+21	; 0x15
    1efe:	7e 89       	ldd	r23, Y+22	; 0x16
    1f00:	8f 89       	ldd	r24, Y+23	; 0x17
    1f02:	98 8d       	ldd	r25, Y+24	; 0x18
    1f04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	9c 8b       	std	Y+20, r25	; 0x14
    1f0e:	8b 8b       	std	Y+19, r24	; 0x13
    1f10:	8b 89       	ldd	r24, Y+19	; 0x13
    1f12:	9c 89       	ldd	r25, Y+20	; 0x14
    1f14:	98 8b       	std	Y+16, r25	; 0x10
    1f16:	8f 87       	std	Y+15, r24	; 0x0f
    1f18:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f1a:	98 89       	ldd	r25, Y+16	; 0x10
    1f1c:	01 97       	sbiw	r24, 0x01	; 1
    1f1e:	f1 f7       	brne	.-4      	; 0x1f1c <main+0x80c>
    1f20:	98 8b       	std	Y+16, r25	; 0x10
    1f22:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(200);
		LCD_ClearDisplay();
    1f24:	0e 94 85 0a 	call	0x150a	; 0x150a <LCD_ClearDisplay>

		LCD_voidGoToXY(0,4);
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	64 e0       	ldi	r22, 0x04	; 4
    1f2c:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
		LCD_void_SendString("Don't Kill");
    1f30:	89 e9       	ldi	r24, 0x99	; 153
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidGoToXY(1,7);
    1f38:	81 e0       	ldi	r24, 0x01	; 1
    1f3a:	67 e0       	ldi	r22, 0x07	; 7
    1f3c:	0e 94 8f 0a 	call	0x151e	; 0x151e <LCD_voidGoToXY>
		LCD_void_SendString("me");
    1f40:	84 ea       	ldi	r24, 0xA4	; 164
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidSendCustomCharacter(customChar5,2, 1, 1);
    1f48:	ce 01       	movw	r24, r28
    1f4a:	cd 96       	adiw	r24, 0x3d	; 61
    1f4c:	62 e0       	ldi	r22, 0x02	; 2
    1f4e:	41 e0       	ldi	r20, 0x01	; 1
    1f50:	21 e0       	ldi	r18, 0x01	; 1
    1f52:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
	//	LCD_voidSendCustomCharacter(customChar6,1, 1, 1);
		LCD_voidSendCustomCharacter(customChar7,3, 1, 14);
    1f56:	ce 01       	movw	r24, r28
    1f58:	83 5b       	subi	r24, 0xB3	; 179
    1f5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f5c:	63 e0       	ldi	r22, 0x03	; 3
    1f5e:	41 e0       	ldi	r20, 0x01	; 1
    1f60:	2e e0       	ldi	r18, 0x0E	; 14
    1f62:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar,3, 1, 14);
    1f66:	ce 01       	movw	r24, r28
    1f68:	4d 96       	adiw	r24, 0x1d	; 29
    1f6a:	63 e0       	ldi	r22, 0x03	; 3
    1f6c:	41 e0       	ldi	r20, 0x01	; 1
    1f6e:	2e e0       	ldi	r18, 0x0E	; 14
    1f70:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 2);
    1f74:	ce 01       	movw	r24, r28
    1f76:	8b 5b       	subi	r24, 0xBB	; 187
    1f78:	9f 4f       	sbci	r25, 0xFF	; 255
    1f7a:	61 e0       	ldi	r22, 0x01	; 1
    1f7c:	41 e0       	ldi	r20, 0x01	; 1
    1f7e:	22 e0       	ldi	r18, 0x02	; 2
    1f80:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 4);
    1f84:	ce 01       	movw	r24, r28
    1f86:	8b 5b       	subi	r24, 0xBB	; 187
    1f88:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8a:	61 e0       	ldi	r22, 0x01	; 1
    1f8c:	41 e0       	ldi	r20, 0x01	; 1
    1f8e:	24 e0       	ldi	r18, 0x04	; 4
    1f90:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar7,3, 1, 14);
    1f94:	ce 01       	movw	r24, r28
    1f96:	83 5b       	subi	r24, 0xB3	; 179
    1f98:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9a:	63 e0       	ldi	r22, 0x03	; 3
    1f9c:	41 e0       	ldi	r20, 0x01	; 1
    1f9e:	2e e0       	ldi	r18, 0x0E	; 14
    1fa0:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar,3, 1, 14);
    1fa4:	ce 01       	movw	r24, r28
    1fa6:	4d 96       	adiw	r24, 0x1d	; 29
    1fa8:	63 e0       	ldi	r22, 0x03	; 3
    1faa:	41 e0       	ldi	r20, 0x01	; 1
    1fac:	2e e0       	ldi	r18, 0x0E	; 14
    1fae:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 6);
    1fb2:	ce 01       	movw	r24, r28
    1fb4:	8b 5b       	subi	r24, 0xBB	; 187
    1fb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb8:	61 e0       	ldi	r22, 0x01	; 1
    1fba:	41 e0       	ldi	r20, 0x01	; 1
    1fbc:	26 e0       	ldi	r18, 0x06	; 6
    1fbe:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 7);
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	8b 5b       	subi	r24, 0xBB	; 187
    1fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc8:	61 e0       	ldi	r22, 0x01	; 1
    1fca:	41 e0       	ldi	r20, 0x01	; 1
    1fcc:	27 e0       	ldi	r18, 0x07	; 7
    1fce:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 8);
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	8b 5b       	subi	r24, 0xBB	; 187
    1fd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd8:	61 e0       	ldi	r22, 0x01	; 1
    1fda:	41 e0       	ldi	r20, 0x01	; 1
    1fdc:	28 e0       	ldi	r18, 0x08	; 8
    1fde:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar7,3, 1, 14);
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	83 5b       	subi	r24, 0xB3	; 179
    1fe6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe8:	63 e0       	ldi	r22, 0x03	; 3
    1fea:	41 e0       	ldi	r20, 0x01	; 1
    1fec:	2e e0       	ldi	r18, 0x0E	; 14
    1fee:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar,3, 1, 14);
    1ff2:	ce 01       	movw	r24, r28
    1ff4:	4d 96       	adiw	r24, 0x1d	; 29
    1ff6:	63 e0       	ldi	r22, 0x03	; 3
    1ff8:	41 e0       	ldi	r20, 0x01	; 1
    1ffa:	2e e0       	ldi	r18, 0x0E	; 14
    1ffc:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 9);
    2000:	ce 01       	movw	r24, r28
    2002:	8b 5b       	subi	r24, 0xBB	; 187
    2004:	9f 4f       	sbci	r25, 0xFF	; 255
    2006:	61 e0       	ldi	r22, 0x01	; 1
    2008:	41 e0       	ldi	r20, 0x01	; 1
    200a:	29 e0       	ldi	r18, 0x09	; 9
    200c:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 10);
    2010:	ce 01       	movw	r24, r28
    2012:	8b 5b       	subi	r24, 0xBB	; 187
    2014:	9f 4f       	sbci	r25, 0xFF	; 255
    2016:	61 e0       	ldi	r22, 0x01	; 1
    2018:	41 e0       	ldi	r20, 0x01	; 1
    201a:	2a e0       	ldi	r18, 0x0A	; 10
    201c:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar7,3, 1, 14);
    2020:	ce 01       	movw	r24, r28
    2022:	83 5b       	subi	r24, 0xB3	; 179
    2024:	9f 4f       	sbci	r25, 0xFF	; 255
    2026:	63 e0       	ldi	r22, 0x03	; 3
    2028:	41 e0       	ldi	r20, 0x01	; 1
    202a:	2e e0       	ldi	r18, 0x0E	; 14
    202c:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar,3, 1, 14);
    2030:	ce 01       	movw	r24, r28
    2032:	4d 96       	adiw	r24, 0x1d	; 29
    2034:	63 e0       	ldi	r22, 0x03	; 3
    2036:	41 e0       	ldi	r20, 0x01	; 1
    2038:	2e e0       	ldi	r18, 0x0E	; 14
    203a:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 11);
    203e:	ce 01       	movw	r24, r28
    2040:	8b 5b       	subi	r24, 0xBB	; 187
    2042:	9f 4f       	sbci	r25, 0xFF	; 255
    2044:	61 e0       	ldi	r22, 0x01	; 1
    2046:	41 e0       	ldi	r20, 0x01	; 1
    2048:	2b e0       	ldi	r18, 0x0B	; 11
    204a:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 12);
    204e:	ce 01       	movw	r24, r28
    2050:	8b 5b       	subi	r24, 0xBB	; 187
    2052:	9f 4f       	sbci	r25, 0xFF	; 255
    2054:	61 e0       	ldi	r22, 0x01	; 1
    2056:	41 e0       	ldi	r20, 0x01	; 1
    2058:	2c e0       	ldi	r18, 0x0C	; 12
    205a:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar6,1, 1, 13);
    205e:	ce 01       	movw	r24, r28
    2060:	8b 5b       	subi	r24, 0xBB	; 187
    2062:	9f 4f       	sbci	r25, 0xFF	; 255
    2064:	61 e0       	ldi	r22, 0x01	; 1
    2066:	41 e0       	ldi	r20, 0x01	; 1
    2068:	2d e0       	ldi	r18, 0x0D	; 13
    206a:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar7,3, 1, 14);
    206e:	ce 01       	movw	r24, r28
    2070:	83 5b       	subi	r24, 0xB3	; 179
    2072:	9f 4f       	sbci	r25, 0xFF	; 255
    2074:	63 e0       	ldi	r22, 0x03	; 3
    2076:	41 e0       	ldi	r20, 0x01	; 1
    2078:	2e e0       	ldi	r18, 0x0E	; 14
    207a:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_ClearDisplay();
    207e:	0e 94 85 0a 	call	0x150a	; 0x150a <LCD_ClearDisplay>
		LCD_void_SendString("Z3bola is Dead");
    2082:	87 ea       	ldi	r24, 0xA7	; 167
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	0e 94 b0 0a 	call	0x1560	; 0x1560 <LCD_void_SendString>
		LCD_voidSendCustomCharacter(customChar10,1, 1, 7);
    208a:	ce 01       	movw	r24, r28
    208c:	8b 59       	subi	r24, 0x9B	; 155
    208e:	9f 4f       	sbci	r25, 0xFF	; 255
    2090:	61 e0       	ldi	r22, 0x01	; 1
    2092:	41 e0       	ldi	r20, 0x01	; 1
    2094:	27 e0       	ldi	r18, 0x07	; 7
    2096:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>

		LCD_voidSendCustomCharacter(customChar8,2, 1, 12);
    209a:	ce 01       	movw	r24, r28
    209c:	8b 5a       	subi	r24, 0xAB	; 171
    209e:	9f 4f       	sbci	r25, 0xFF	; 255
    20a0:	62 e0       	ldi	r22, 0x02	; 2
    20a2:	41 e0       	ldi	r20, 0x01	; 1
    20a4:	2c e0       	ldi	r18, 0x0C	; 12
    20a6:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
		LCD_voidSendCustomCharacter(customChar9,3, 1, 13);
    20aa:	ce 01       	movw	r24, r28
    20ac:	83 5a       	subi	r24, 0xA3	; 163
    20ae:	9f 4f       	sbci	r25, 0xFF	; 255
    20b0:	63 e0       	ldi	r22, 0x03	; 3
    20b2:	41 e0       	ldi	r20, 0x01	; 1
    20b4:	2d e0       	ldi	r18, 0x0D	; 13
    20b6:	0e 94 45 0b 	call	0x168a	; 0x168a <LCD_voidSendCustomCharacter>
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	aa e7       	ldi	r26, 0x7A	; 122
    20c0:	b4 e4       	ldi	r27, 0x44	; 68
    20c2:	8b 87       	std	Y+11, r24	; 0x0b
    20c4:	9c 87       	std	Y+12, r25	; 0x0c
    20c6:	ad 87       	std	Y+13, r26	; 0x0d
    20c8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    20cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    20ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    20d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    20d2:	20 e0       	ldi	r18, 0x00	; 0
    20d4:	30 e0       	ldi	r19, 0x00	; 0
    20d6:	4a ef       	ldi	r20, 0xFA	; 250
    20d8:	54 e4       	ldi	r21, 0x44	; 68
    20da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20de:	dc 01       	movw	r26, r24
    20e0:	cb 01       	movw	r24, r22
    20e2:	8f 83       	std	Y+7, r24	; 0x07
    20e4:	98 87       	std	Y+8, r25	; 0x08
    20e6:	a9 87       	std	Y+9, r26	; 0x09
    20e8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    20ea:	6f 81       	ldd	r22, Y+7	; 0x07
    20ec:	78 85       	ldd	r23, Y+8	; 0x08
    20ee:	89 85       	ldd	r24, Y+9	; 0x09
    20f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    20f2:	20 e0       	ldi	r18, 0x00	; 0
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	40 e8       	ldi	r20, 0x80	; 128
    20f8:	5f e3       	ldi	r21, 0x3F	; 63
    20fa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20fe:	88 23       	and	r24, r24
    2100:	2c f4       	brge	.+10     	; 0x210c <main+0x9fc>
		__ticks = 1;
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	9e 83       	std	Y+6, r25	; 0x06
    2108:	8d 83       	std	Y+5, r24	; 0x05
    210a:	3f c0       	rjmp	.+126    	; 0x218a <main+0xa7a>
	else if (__tmp > 65535)
    210c:	6f 81       	ldd	r22, Y+7	; 0x07
    210e:	78 85       	ldd	r23, Y+8	; 0x08
    2110:	89 85       	ldd	r24, Y+9	; 0x09
    2112:	9a 85       	ldd	r25, Y+10	; 0x0a
    2114:	20 e0       	ldi	r18, 0x00	; 0
    2116:	3f ef       	ldi	r19, 0xFF	; 255
    2118:	4f e7       	ldi	r20, 0x7F	; 127
    211a:	57 e4       	ldi	r21, 0x47	; 71
    211c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2120:	18 16       	cp	r1, r24
    2122:	4c f5       	brge	.+82     	; 0x2176 <main+0xa66>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2124:	6b 85       	ldd	r22, Y+11	; 0x0b
    2126:	7c 85       	ldd	r23, Y+12	; 0x0c
    2128:	8d 85       	ldd	r24, Y+13	; 0x0d
    212a:	9e 85       	ldd	r25, Y+14	; 0x0e
    212c:	20 e0       	ldi	r18, 0x00	; 0
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e2       	ldi	r20, 0x20	; 32
    2132:	51 e4       	ldi	r21, 0x41	; 65
    2134:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2138:	dc 01       	movw	r26, r24
    213a:	cb 01       	movw	r24, r22
    213c:	bc 01       	movw	r22, r24
    213e:	cd 01       	movw	r24, r26
    2140:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2144:	dc 01       	movw	r26, r24
    2146:	cb 01       	movw	r24, r22
    2148:	9e 83       	std	Y+6, r25	; 0x06
    214a:	8d 83       	std	Y+5, r24	; 0x05
    214c:	0f c0       	rjmp	.+30     	; 0x216c <main+0xa5c>
    214e:	88 ec       	ldi	r24, 0xC8	; 200
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	9c 83       	std	Y+4, r25	; 0x04
    2154:	8b 83       	std	Y+3, r24	; 0x03
    2156:	8b 81       	ldd	r24, Y+3	; 0x03
    2158:	9c 81       	ldd	r25, Y+4	; 0x04
    215a:	01 97       	sbiw	r24, 0x01	; 1
    215c:	f1 f7       	brne	.-4      	; 0x215a <main+0xa4a>
    215e:	9c 83       	std	Y+4, r25	; 0x04
    2160:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2162:	8d 81       	ldd	r24, Y+5	; 0x05
    2164:	9e 81       	ldd	r25, Y+6	; 0x06
    2166:	01 97       	sbiw	r24, 0x01	; 1
    2168:	9e 83       	std	Y+6, r25	; 0x06
    216a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    216c:	8d 81       	ldd	r24, Y+5	; 0x05
    216e:	9e 81       	ldd	r25, Y+6	; 0x06
    2170:	00 97       	sbiw	r24, 0x00	; 0
    2172:	69 f7       	brne	.-38     	; 0x214e <main+0xa3e>
    2174:	14 c0       	rjmp	.+40     	; 0x219e <main+0xa8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2176:	6f 81       	ldd	r22, Y+7	; 0x07
    2178:	78 85       	ldd	r23, Y+8	; 0x08
    217a:	89 85       	ldd	r24, Y+9	; 0x09
    217c:	9a 85       	ldd	r25, Y+10	; 0x0a
    217e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2182:	dc 01       	movw	r26, r24
    2184:	cb 01       	movw	r24, r22
    2186:	9e 83       	std	Y+6, r25	; 0x06
    2188:	8d 83       	std	Y+5, r24	; 0x05
    218a:	8d 81       	ldd	r24, Y+5	; 0x05
    218c:	9e 81       	ldd	r25, Y+6	; 0x06
    218e:	9a 83       	std	Y+2, r25	; 0x02
    2190:	89 83       	std	Y+1, r24	; 0x01
    2192:	89 81       	ldd	r24, Y+1	; 0x01
    2194:	9a 81       	ldd	r25, Y+2	; 0x02
    2196:	01 97       	sbiw	r24, 0x01	; 1
    2198:	f1 f7       	brne	.-4      	; 0x2196 <main+0xa86>
    219a:	9a 83       	std	Y+2, r25	; 0x02
    219c:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1000);
		LCD_ClearDisplay();
    219e:	0e 94 85 0a 	call	0x150a	; 0x150a <LCD_ClearDisplay>
    21a2:	c7 cd       	rjmp	.-1138   	; 0x1d32 <main+0x622>

000021a4 <__udivmodsi4>:
    21a4:	a1 e2       	ldi	r26, 0x21	; 33
    21a6:	1a 2e       	mov	r1, r26
    21a8:	aa 1b       	sub	r26, r26
    21aa:	bb 1b       	sub	r27, r27
    21ac:	fd 01       	movw	r30, r26
    21ae:	0d c0       	rjmp	.+26     	; 0x21ca <__udivmodsi4_ep>

000021b0 <__udivmodsi4_loop>:
    21b0:	aa 1f       	adc	r26, r26
    21b2:	bb 1f       	adc	r27, r27
    21b4:	ee 1f       	adc	r30, r30
    21b6:	ff 1f       	adc	r31, r31
    21b8:	a2 17       	cp	r26, r18
    21ba:	b3 07       	cpc	r27, r19
    21bc:	e4 07       	cpc	r30, r20
    21be:	f5 07       	cpc	r31, r21
    21c0:	20 f0       	brcs	.+8      	; 0x21ca <__udivmodsi4_ep>
    21c2:	a2 1b       	sub	r26, r18
    21c4:	b3 0b       	sbc	r27, r19
    21c6:	e4 0b       	sbc	r30, r20
    21c8:	f5 0b       	sbc	r31, r21

000021ca <__udivmodsi4_ep>:
    21ca:	66 1f       	adc	r22, r22
    21cc:	77 1f       	adc	r23, r23
    21ce:	88 1f       	adc	r24, r24
    21d0:	99 1f       	adc	r25, r25
    21d2:	1a 94       	dec	r1
    21d4:	69 f7       	brne	.-38     	; 0x21b0 <__udivmodsi4_loop>
    21d6:	60 95       	com	r22
    21d8:	70 95       	com	r23
    21da:	80 95       	com	r24
    21dc:	90 95       	com	r25
    21de:	9b 01       	movw	r18, r22
    21e0:	ac 01       	movw	r20, r24
    21e2:	bd 01       	movw	r22, r26
    21e4:	cf 01       	movw	r24, r30
    21e6:	08 95       	ret

000021e8 <__prologue_saves__>:
    21e8:	2f 92       	push	r2
    21ea:	3f 92       	push	r3
    21ec:	4f 92       	push	r4
    21ee:	5f 92       	push	r5
    21f0:	6f 92       	push	r6
    21f2:	7f 92       	push	r7
    21f4:	8f 92       	push	r8
    21f6:	9f 92       	push	r9
    21f8:	af 92       	push	r10
    21fa:	bf 92       	push	r11
    21fc:	cf 92       	push	r12
    21fe:	df 92       	push	r13
    2200:	ef 92       	push	r14
    2202:	ff 92       	push	r15
    2204:	0f 93       	push	r16
    2206:	1f 93       	push	r17
    2208:	cf 93       	push	r28
    220a:	df 93       	push	r29
    220c:	cd b7       	in	r28, 0x3d	; 61
    220e:	de b7       	in	r29, 0x3e	; 62
    2210:	ca 1b       	sub	r28, r26
    2212:	db 0b       	sbc	r29, r27
    2214:	0f b6       	in	r0, 0x3f	; 63
    2216:	f8 94       	cli
    2218:	de bf       	out	0x3e, r29	; 62
    221a:	0f be       	out	0x3f, r0	; 63
    221c:	cd bf       	out	0x3d, r28	; 61
    221e:	09 94       	ijmp

00002220 <__epilogue_restores__>:
    2220:	2a 88       	ldd	r2, Y+18	; 0x12
    2222:	39 88       	ldd	r3, Y+17	; 0x11
    2224:	48 88       	ldd	r4, Y+16	; 0x10
    2226:	5f 84       	ldd	r5, Y+15	; 0x0f
    2228:	6e 84       	ldd	r6, Y+14	; 0x0e
    222a:	7d 84       	ldd	r7, Y+13	; 0x0d
    222c:	8c 84       	ldd	r8, Y+12	; 0x0c
    222e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2230:	aa 84       	ldd	r10, Y+10	; 0x0a
    2232:	b9 84       	ldd	r11, Y+9	; 0x09
    2234:	c8 84       	ldd	r12, Y+8	; 0x08
    2236:	df 80       	ldd	r13, Y+7	; 0x07
    2238:	ee 80       	ldd	r14, Y+6	; 0x06
    223a:	fd 80       	ldd	r15, Y+5	; 0x05
    223c:	0c 81       	ldd	r16, Y+4	; 0x04
    223e:	1b 81       	ldd	r17, Y+3	; 0x03
    2240:	aa 81       	ldd	r26, Y+2	; 0x02
    2242:	b9 81       	ldd	r27, Y+1	; 0x01
    2244:	ce 0f       	add	r28, r30
    2246:	d1 1d       	adc	r29, r1
    2248:	0f b6       	in	r0, 0x3f	; 63
    224a:	f8 94       	cli
    224c:	de bf       	out	0x3e, r29	; 62
    224e:	0f be       	out	0x3f, r0	; 63
    2250:	cd bf       	out	0x3d, r28	; 61
    2252:	ed 01       	movw	r28, r26
    2254:	08 95       	ret

00002256 <_exit>:
    2256:	f8 94       	cli

00002258 <__stop_program>:
    2258:	ff cf       	rjmp	.-2      	; 0x2258 <__stop_program>
